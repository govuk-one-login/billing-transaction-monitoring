name: Deploy CF-stack and run integration tests on PR

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches-ignore:
      - 'no-int-test/**'

env:
  AWS_REGION: eu-west-2
  ENV_NAME: pr-${{ github.event.pull_request.number }}

jobs:
  build-and-deploy:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
      - run: npm test
      - name: Build lambdas
        run: npm run build
      - name: SAM setup
        uses: aws-actions/setup-sam@v2
        with:
          version: 1.59.0
      - name: Merge template files into template.yaml
        run: npm run build:template
      - name: Check for potential CloudFormation security issues
        uses: bridgecrewio/checkov-action@master
        with:
          file: template.yaml
          framework: cloudformation
          quiet: true
          soft_fail: false
      - name: SAM build
        run: sam build
      - name: Assume AWS GitHub actions tooling role in dev
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.DEV_GH_ACTIONS_TOOLING_ROLE_ARN }}
      - name: SAM validate
        run: sam validate
      - name: SAM deploy
        run: npm run sam:deploy

  run-integration-tests:
    needs: [build-and-deploy]
    permissions:
      contents: write
      id-token: write
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: true
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
      - name: Assume AWS GitHub actions tooling role in dev
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.DEV_GH_ACTIONS_TOOLING_ROLE_ARN }}
      - name: Delete old Jest HTML reports
        run: |
          REPORTS_DIR="./reports/jest-html-reporters-attach"
          # Get the number of existing reports
          REPORTS_COUNT=$(ls $REPORTS_DIR | grep -c "jest-report-" || true)
          # If there are more than 3 reports, remove the oldest ones
          if [ $REPORTS_COUNT -gt 3 ]; then
            # Get the number of reports to remove
            REPORTS_TO_REMOVE=$((REPORTS_COUNT - 3))
            # Get the oldest report files
            OLDEST_REPORTS=$(ls -tr $REPORTS_DIR | grep "jest-report-" | head -n $REPORTS_TO_REMOVE)
            # Remove the oldest report files
            rm -rf $REPORTS_DIR/$OLDEST_REPORTS
          fi
      - name: Run integration tests and generate Jest HTML report
        run: |
          # Generate Jest HTML report with unique name
          REPORTS_DIR="./reports/jest-html-reporters-attach"
          REPORTS_DIR="$REPORTS_DIR/jest-html-reporters-$(date +%Y-%m-%d-%H-%M-%S)"
          mkdir -p $REPORTS_DIR
          npm run test:integration
          mv "$REPORTS_DIR/jest-html-reporters-attach/* $REPORTS_DIR
          mv "$REPORTS_DIR/jest-html-reporters-attach/index.html  $REPORTS_DIR/index.html
      - name: Deploy Jest HTML report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./reports
          commit_message: 'Deploy Jest HTML report to gh-pages'
          keep_files: 3
