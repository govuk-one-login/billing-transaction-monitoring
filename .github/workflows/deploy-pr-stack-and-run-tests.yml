name: Deploy CF-stack and run tests on PR

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches-ignore:
      - 'no-int-test/**'

env:
  AWS_REGION: eu-west-2
  ENV_NAME: pr-${{ github.event.pull_request.number }}
  SAM_DEPLOY_PARAMETER_OVERRIDES: CodeSigningConfigArn=${{ secrets.DEV_GH_ACTIONS_CODE_SIGNING_CONFIG_ARN }} PermissionsBoundary=${{ secrets.DEV_GH_ACTIONS_PERMISSIONS_BOUNDARY_ARN }}

jobs:
  # build-and-deploy:
  #   permissions:
  #     contents: read
  #     id-token: write
  #   runs-on: ubuntu-latest
  #   env:
  #     TEST_ROLE_ARN: ${{ secrets.DEV_GH_ACTIONS_TEST_ROLE_ARN }}
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 16
  #     - run: npm ci
  #     - run: npm test
  #     - name: Build lambdas
  #       run: npm run build
  #     - name: SAM setup
  #       uses: aws-actions/setup-sam@v2
  #       with:
  #         use-installer: true
  #     - name: Merge template files into template.yaml
  #       run: npm run build:template
  #     - name: Check for potential CloudFormation security issues
  #       uses: bridgecrewio/checkov-action@master
  #       with:
  #         file: template.yaml
  #         framework: cloudformation
  #         quiet: true
  #         soft_fail: false
  #     - name: SAM build
  #       run: sam build
  #     - name: Assume AWS GitHub actions tooling role in dev
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-region: ${{ env.AWS_REGION }}
  #         role-to-assume: ${{ secrets.DEV_GH_ACTIONS_PR_ROLE_ARN }}
  #     - name: SAM validate
  #       run: sam validate
  #     - name: SAM deploy
  #       env:
  #         SIGNING_PROFILE: ${{ secrets.DEV_SIGNING_PROFILE_NAME }}
  #       run: src/tools/deploy-pr-stack.sh

  # run-integration-tests:
  #   needs: [build-and-deploy]
  #   permissions:
  #     contents: write
  #     id-token: write
  #   runs-on: ubuntu-latest
  #   env:
  #     FORCE_COLOR: true
  #     TEST_VIA_LAMBDA: true
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 16
  #     - run: npm ci
  #     - name: Assume AWS GitHub actions tooling role in dev
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-region: ${{ env.AWS_REGION }}
  #         role-to-assume: ${{ secrets.DEV_GH_ACTIONS_TEST_ROLE_ARN }}
  #     - name: Run integration tests
  #       run: npm run test:ephemeralEnvs
  #     - name: Deploy Jest HTML report to Github Pages
  #       if: always()
  #       uses: peaceiris/actions-gh-pages@v3
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         publish_dir: ./reports
  #         commit_message: 'Deploy Jest HTML report to gh-pages'
  #         keep_files: true

  run-ui-tests:
    # needs: [run-integration-tests]
    # if: always()
    permissions:
      contents: write
      id-token: write
    runs-on: ubuntu-latest
    env:
      TEST_VIA_LAMBDA: true
      FORCE_COLOR: true
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
      - name: Assume AWS GitHub actions tooling role in dev
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.DEV_GH_ACTIONS_TEST_ROLE_ARN }}
      - name: Run UI tests
        run: npm run test:ui
      - name: List files in UI test report dir
        run: ls ./ui-tests/reports
      - name: Deploy UI Test HTML report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ../ui-tests/reports
          commit_message: 'Deploy UI HTML report to gh-pages'
          keep_files: true

  cleanup-and-publish-reports:
    needs: [run-ui-tests]
    if: always()
    permissions:
      contents: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Copy cleanup script to tmp
        run:  |
          cp $GITHUB_WORKSPACE/integration_tests/cleanup-jest-html-reports.sh /tmp/
      - name: Check out gh-pages branch
        uses: actions/checkout@v3
        with:
          ref: gh-pages
      - name: Use cleanup script from current branch to clean gh-pages
        env:
          github_token: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.email "actions@github.com"
          git config user.name "Github Actions"
          cd jest-html-reports
          /tmp/cleanup-jest-html-reports.sh 5
          cd ../uiHtmlReports
          ls
          /tmp/cleanup-jest-html-reports.sh 1
          if git diff --exit-code >/dev/null; then
            echo "No directories were deleted.Skipping commit."
          else
            git add -A
            git commit -m "cleanup old reports" --allow-empty
            git push origin gh-pages
          fi
        if: always()
