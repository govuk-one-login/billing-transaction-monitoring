<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="41" failures="0" errors="0" time="385.079">
  <testsuite name="Email" errors="0" failures="0" skipped="0" timestamp="2023-07-20T12:57:07" time="98.507" tests="5">
    <testcase classname="Email CSV attachment" name="Email CSV attachment" time="4.948">
    </testcase>
    <testcase classname="Email PDF attachment" name="Email PDF attachment" time="3.719">
    </testcase>
    <testcase classname="Email CSV and PDF" name="Email CSV and PDF" time="2.675">
    </testcase>
    <testcase classname="Email CSV, PDF and JPEG" name="Email CSV, PDF and JPEG" time="2.773">
    </testcase>
    <testcase classname="Email Various attachments" name="Email Various attachments" time="2.637">
    </testcase>
  </testsuite>
  <testsuite name="
 DashboardDataExtractFunction" errors="0" failures="0" skipped="0" timestamp="2023-07-20T12:57:07" time="159.369" tests="1">
    <testcase classname="
 DashboardDataExtractFunction should save an updated full-extract.json file, which is reflected in the btm_monthly_extract table, when standardised invoice data is stored in s3" name="
 DashboardDataExtractFunction should save an updated full-extract.json file, which is reflected in the btm_monthly_extract table, when standardised invoice data is stored in s3" time="81.822">
    </testcase>
  </testsuite>
  <testsuite name="New invoice with same month, vendor, service as old line item" errors="0" failures="0" skipped="0" timestamp="2023-07-20T12:57:07" time="204.408" tests="1">
    <testcase classname="New invoice with same month, vendor, service as old line item should archive old line item" name="New invoice with same month, vendor, service as old line item should archive old line item" time="124.289">
    </testcase>
  </testsuite>
  <testsuite name="
Upload events to s3 directly and check the transaction curated view 
" errors="0" failures="0" skipped="0" timestamp="2023-07-20T12:59:47" time="57.358" tests="4">
    <testcase classname="
Upload events to s3 directly and check the transaction curated view 
 data retrieved from transaction_curated athena view should match the input data VENDOR_1_EVENT_1, vendor_testvendor1, 2, 2005/06/30 10:00" name="
Upload events to s3 directly and check the transaction curated view 
 data retrieved from transaction_curated athena view should match the input data VENDOR_1_EVENT_1, vendor_testvendor1, 2, 2005/06/30 10:00" time="11.881">
    </testcase>
    <testcase classname="
Upload events to s3 directly and check the transaction curated view 
 data retrieved from transaction_curated athena view should match the input data VENDOR_2_EVENT_2, vendor_testvendor2, 2, 2005/07/10 10:00" name="
Upload events to s3 directly and check the transaction curated view 
 data retrieved from transaction_curated athena view should match the input data VENDOR_2_EVENT_2, vendor_testvendor2, 2, 2005/07/10 10:00" time="13.272">
    </testcase>
    <testcase classname="
Upload events to s3 directly and check the transaction curated view 
 data retrieved from transaction_curated athena view should match the input data VENDOR_3_EVENT_4, vendor_testvendor3, 7, 2005/08/10 10:00" name="
Upload events to s3 directly and check the transaction curated view 
 data retrieved from transaction_curated athena view should match the input data VENDOR_3_EVENT_4, vendor_testvendor3, 7, 2005/08/10 10:00" time="14.555">
    </testcase>
    <testcase classname="
Upload events to s3 directly and check the transaction curated view 
 data retrieved from transaction_curated athena view should match the input data VENDOR_3_EVENT_6, vendor_testvendor3, 14, 2005/09/10 10:00" name="
Upload events to s3 directly and check the transaction curated view 
 data retrieved from transaction_curated athena view should match the input data VENDOR_3_EVENT_6, vendor_testvendor3, 14, 2005/09/10 10:00" time="15.904">
    </testcase>
  </testsuite>
  <testsuite name="
 Happy path - Upload valid mock invoice and verify data is seen in the billing view
" errors="0" failures="0" skipped="0" timestamp="2023-07-20T12:57:07" time="224.691" tests="2">
    <testcase classname="
 Happy path - Upload valid mock invoice and verify data is seen in the billing view
 upload valid pdf file in raw-invoice bucket and see that we can see the data in the view" name="
 Happy path - Upload valid mock invoice and verify data is seen in the billing view
 upload valid pdf file in raw-invoice bucket and see that we can see the data in the view" time="93.158">
    </testcase>
    <testcase classname="
 Happy path - Upload valid mock invoice and verify data is seen in the billing view
 upload valid csv file in raw-invoice bucket and check that we can see the data in the view" name="
 Happy path - Upload valid mock invoice and verify data is seen in the billing view
 upload valid csv file in raw-invoice bucket and check that we can see the data in the view" time="51.257">
    </testcase>
  </testsuite>
  <testsuite name="
 Upload invoice standardised data to s3 directly and check the billing curated view" errors="0" failures="0" skipped="0" timestamp="2023-07-20T13:00:32" time="25.334" tests="1">
    <testcase classname="
 Upload invoice standardised data to s3 directly and check the billing curated view Uploaded invoice standardised data should match the results from billing curated view" name="
 Upload invoice standardised data to s3 directly and check the billing curated view Uploaded invoice standardised data should match the results from billing curated view" time="21.71">
    </testcase>
  </testsuite>
  <testsuite name="Given a csv with event data is uploaded to the transaction csv bucket" errors="0" failures="0" skipped="0" timestamp="2023-07-20T13:00:52" time="9.795" tests="1">
    <testcase classname="Given a csv with event data is uploaded to the transaction csv bucket stores the events we care about in the storage bucket" name="Given a csv with event data is uploaded to the transaction csv bucket stores the events we care about in the storage bucket" time="2.106">
    </testcase>
  </testsuite>
  <testsuite name="
 Unhappy path - Upload invalid pdf to the raw invoice bucket test
" errors="0" failures="0" skipped="0" timestamp="2023-07-20T13:00:57" time="5.245" tests="1">
    <testcase classname="
 Unhappy path - Upload invalid pdf to the raw invoice bucket test
 should move the original raw invoice to failed folder in s3 raw-invoice bucket upon uploading the invalid pdf file " name="
 Unhappy path - Upload invalid pdf to the raw invoice bucket test
 should move the original raw invoice to failed folder in s3 raw-invoice bucket upon uploading the invalid pdf file " time="3.934">
    </testcase>
  </testsuite>
  <testsuite name="
 Clean Function - Happy path tests
" errors="0" failures="0" skipped="0" timestamp="2023-07-20T13:00:44" time="28.191" tests="6">
    <testcase classname="
 Clean Function - Happy path tests
 should store cleaned events in the storage bucket and check credit field value" name="
 Clean Function - Happy path tests
 should store cleaned events in the storage bucket and check credit field value" time="2.048">
    </testcase>
    <testcase classname="
 Clean Function - Happy path tests
 should store cleaned events in the storage bucket and check credit field value" name="
 Clean Function - Happy path tests
 should store cleaned events in the storage bucket and check credit field value" time="1.45">
    </testcase>
    <testcase classname="
 Clean Function - Happy path tests
 should store cleaned events in the storage bucket and check credit field value" name="
 Clean Function - Happy path tests
 should store cleaned events in the storage bucket and check credit field value" time="1.453">
    </testcase>
    <testcase classname="
 Clean Function - Unhappy path tests
 should not store event with invalid ComponentId in the storage bucket" name="
 Clean Function - Unhappy path tests
 should not store event with invalid ComponentId in the storage bucket" time="7.17">
    </testcase>
    <testcase classname="
 Clean Function - Unhappy path tests
 should not store event with invalid Timestamp in the storage bucket" name="
 Clean Function - Unhappy path tests
 should not store event with invalid Timestamp in the storage bucket" time="7.202">
    </testcase>
    <testcase classname="
 Clean Function - Unhappy path tests
 should not store event with invalid timestamp formatted in the storage bucket" name="
 Clean Function - Unhappy path tests
 should not store event with invalid timestamp formatted in the storage bucket" time="7.199">
    </testcase>
  </testsuite>
  <testsuite name="
 Happy path tests 

 Generate valid event and check cloud watch logs lambda functions Filter,Clean, Store Transactions contains eventId
" errors="0" failures="0" skipped="0" timestamp="2023-07-20T13:01:02" time="14.848" tests="3">
    <testcase classname="
 Happy path tests 

 Generate valid event and check cloud watch logs lambda functions Filter,Clean, Store Transactions contains eventId
 Filter function cloud watch logs should contain eventid" name="
 Happy path tests 

 Generate valid event and check cloud watch logs lambda functions Filter,Clean, Store Transactions contains eventId
 Filter function cloud watch logs should contain eventid" time="8.315">
    </testcase>
    <testcase classname="
 Happy path tests 

 Generate valid event and check cloud watch logs lambda functions Filter,Clean, Store Transactions contains eventId
 Clean function cloud watch logs should contain eventid" name="
 Happy path tests 

 Generate valid event and check cloud watch logs lambda functions Filter,Clean, Store Transactions contains eventId
 Clean function cloud watch logs should contain eventid" time="1.49">
    </testcase>
    <testcase classname="
 Happy path tests 

 Generate valid event and check cloud watch logs lambda functions Filter,Clean, Store Transactions contains eventId
 Store Transactions function cloud watch logs should contain eventid" name="
 Happy path tests 

 Generate valid event and check cloud watch logs lambda functions Filter,Clean, Store Transactions contains eventId
 Store Transactions function cloud watch logs should contain eventid" time="1.34">
    </testcase>
  </testsuite>
  <testsuite name="Execute athena query to retrieve rate details" errors="0" failures="0" skipped="0" timestamp="2023-07-20T13:01:03" time="14.529" tests="1">
    <testcase classname="Execute athena query to retrieve rate details retrieved rate details should match rate csv uploaded in s3 config bucket" name="Execute athena query to retrieve rate details retrieved rate details should match rate csv uploaded in s3 config bucket" time="12.409">
    </testcase>
  </testsuite>
  <testsuite name="
 Execute athena query to retrieve vendor service details
" errors="0" failures="0" skipped="0" timestamp="2023-07-20T13:01:17" time="13.239" tests="1">
    <testcase classname="
 Execute athena query to retrieve vendor service details
 retrieved vendor service details should match with vendor service csv uploaded in s3 config bucket " name="
 Execute athena query to retrieve vendor service details
 retrieved vendor service details should match with vendor service csv uploaded in s3 config bucket " time="10.719">
    </testcase>
  </testsuite>
  <testsuite name="
 Invoice data buckets exists in S3
" errors="0" failures="0" skipped="0" timestamp="2023-07-20T13:01:30" time="2.51" tests="3">
    <testcase classname="
 Invoice data buckets exists in S3
 Raw invoice bucket should exists in S3" name="
 Invoice data buckets exists in S3
 Raw invoice bucket should exists in S3" time="0.381">
    </testcase>
    <testcase classname="
 Invoice data buckets exists in S3
 Raw invoice textract data bucket should exists in S3" name="
 Invoice data buckets exists in S3
 Raw invoice textract data bucket should exists in S3" time="0.399">
    </testcase>
    <testcase classname="
 Invoice data buckets exists in S3
 Storage bucket should exists in S3" name="
 Invoice data buckets exists in S3
 Storage bucket should exists in S3" time="0.387">
    </testcase>
  </testsuite>
  <testsuite name="
 Filter function - Happy path tests
" errors="0" failures="0" skipped="0" timestamp="2023-07-20T13:01:18" time="15.864" tests="2">
    <testcase classname="
 Filter function - Happy path tests
 should store event in the storage bucket for a valid event" name="
 Filter function - Happy path tests
 should store event in the storage bucket for a valid event" time="1.992">
    </testcase>
    <testcase classname="
 Filter Function - Unhappy path tests
 should not store events with invalid EventName in the storage bucket" name="
 Filter Function - Unhappy path tests
 should not store events with invalid EventName in the storage bucket" time="7.144">
    </testcase>
  </testsuite>
  <testsuite name="
 Store function test
" errors="0" failures="0" skipped="0" timestamp="2023-07-20T13:01:33" time="3.249" tests="1">
    <testcase classname="
 Store function test
 should store cleaned events in the storage bucket" name="
 Store function test
 should store cleaned events in the storage bucket" time="1.885">
    </testcase>
  </testsuite>
  <testsuite name="
 Verify VAT details exists in S3 config bucket
" errors="0" failures="0" skipped="0" timestamp="2023-07-20T13:01:37" time="1.585" tests="1">
    <testcase classname="
 Verify VAT details exists in S3 config bucket
 S3 config bucket should contain VAT details matches with expected vat config file " name="
 Verify VAT details exists in S3 config bucket
 S3 config bucket should contain VAT details matches with expected vat config file " time="0.427">
    </testcase>
  </testsuite>
  <testsuite name="
 Execute athena query to retrieve contract details details
" errors="0" failures="0" skipped="0" timestamp="2023-07-20T13:01:33" time="12.116" tests="1">
    <testcase classname="
 Execute athena query to retrieve contract details details
 retrieved contract details should match with contract csv uploaded in s3 config bucket " name="
 Execute athena query to retrieve contract details details
 retrieved contract details should match with contract csv uploaded in s3 config bucket " time="10.678">
    </testcase>
  </testsuite>
  <testsuite name="
Generate valid event and execute athena query
" errors="0" failures="0" skipped="0" timestamp="2023-07-20T13:01:12" time="33.99" tests="2">
    <testcase classname="
Generate valid event and execute athena query
 should contain eventId in the generated query results" name="
Generate valid event and execute athena query
 should contain eventId in the generated query results" time="12.26">
    </testcase>
    <testcase classname="
Generate invalid event and execute athena query
 should not contain eventId in the generated query results" name="
Generate invalid event and execute athena query
 should not contain eventId in the generated query results" time="17.474">
    </testcase>
  </testsuite>
  <testsuite name="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
" errors="0" failures="0" skipped="0" timestamp="2023-07-20T12:58:46" time="284.402" tests="4">
    <testcase classname="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty equals TransactionQty and No TransactionPrice No BillingPrice ,2,£0.00,2,£0.00,-1234567.01" name="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty equals TransactionQty and No TransactionPrice No BillingPrice ,2,£0.00,2,£0.00,-1234567.01" time="104.14">
    </testcase>
    <testcase classname="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty less than TransactionQty and No BillingPrice but has TransactionPrice ,2,£0.00,11,£27.50,-100.0" name="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty less than TransactionQty and No BillingPrice but has TransactionPrice ,2,£0.00,11,£27.50,-100.0" time="69.608">
    </testcase>
    <testcase classname="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty greater than TransactionQty and No TransactionPrice but has BillingPrice,11,£27.50,2,£0.00,-1234567.05" name="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty greater than TransactionQty and No TransactionPrice but has BillingPrice,11,£27.50,2,£0.00,-1234567.05" time="74.226">
    </testcase>
    <testcase classname="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty equals TransactionQty but BillingPrice greater than TransactionPrice,2,£6.66,2,£2.46,170.7317" name="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty equals TransactionQty but BillingPrice greater than TransactionPrice,2,£6.66,2,£2.46,170.7317" time="34.486">
    </testcase>
  </testsuite>
</testsuites>