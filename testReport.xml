<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="41" failures="3" errors="0" time="1575.008">
  <testsuite name="Email" errors="0" failures="0" skipped="0" timestamp="2023-07-25T13:05:52" time="155.209" tests="5">
    <testcase classname="Email CSV attachment" name="Email CSV attachment" time="4.39">
    </testcase>
    <testcase classname="Email PDF attachment" name="Email PDF attachment" time="2.965">
    </testcase>
    <testcase classname="Email CSV and PDF" name="Email CSV and PDF" time="2.765">
    </testcase>
    <testcase classname="Email CSV, PDF and JPEG" name="Email CSV, PDF and JPEG" time="2.811">
    </testcase>
    <testcase classname="Email Various attachments" name="Email Various attachments" time="2.631">
    </testcase>
  </testsuite>
  <testsuite name="
 DashboardDataExtractFunction" errors="0" failures="0" skipped="0" timestamp="2023-07-25T13:05:52" time="189.98" tests="1">
    <testcase classname="
 DashboardDataExtractFunction should save an updated full-extract.json file, which is reflected in the btm_monthly_extract table, when standardised invoice data is stored in s3" name="
 DashboardDataExtractFunction should save an updated full-extract.json file, which is reflected in the btm_monthly_extract table, when standardised invoice data is stored in s3" time="84.698">
    </testcase>
  </testsuite>
  <testsuite name="
 Happy path - Upload valid mock invoice and verify data is seen in the billing view
" errors="0" failures="1" skipped="0" timestamp="2023-07-25T13:05:52" time="295.092" tests="2">
    <testcase classname="
 Happy path - Upload valid mock invoice and verify data is seen in the billing view
 upload valid pdf file in raw-invoice bucket and see that we can see the data in the view" name="
 Happy path - Upload valid mock invoice and verify data is seen in the billing view
 upload valid pdf file in raw-invoice bucket and see that we can see the data in the view" time="130.736">
    </testcase>
    <testcase classname="
 Happy path - Upload valid mock invoice and verify data is seen in the billing view
 upload valid csv file in raw-invoice bucket and check that we can see the data in the view" name="
 Happy path - Upload valid mock invoice and verify data is seen in the billing view
 upload valid csv file in raw-invoice bucket and check that we can see the data in the view" time="48.808">
      <failure>Error: Error: Ran out of retries
    at /home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/src/handlers/int-test-support/helpers/commonHelpers.ts:70:18
    at runNextTicks (node:internal/process/task_queues:61:5)
    at processTimers (node:internal/timers:499:9)</failure>
    </testcase>
  </testsuite>
  <testsuite name="New invoice with same month, vendor, service as old line item" errors="0" failures="1" skipped="0" timestamp="2023-07-25T13:05:52" time="317.304" tests="1">
    <testcase classname="New invoice with same month, vendor, service as old line item should archive old line item" name="New invoice with same month, vendor, service as old line item should archive old line item" time="205.553">
      <failure>Error: Ran out of retries
    at /home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/src/handlers/int-test-support/helpers/call-wrappers.ts:51:13
    at /home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/src/handlers/int-test-support/helpers/call-wrappers.ts:61:24
    at runNextTicks (node:internal/process/task_queues:61:5)
    at listOnTimeout (node:internal/timers:528:9)
    at processTimers (node:internal/timers:502:7)
    at /home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/src/handlers/int-test-support/helpers/call-wrappers.ts:58:18
    at /home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/src/handlers/int-test-support/helpers/call-wrappers.ts:58:18
    at listS3Keys (/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/integration_tests/tests/s3-invoice-standardised-line-item-tests.ts:206:18)
    at /home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/integration_tests/tests/s3-invoice-standardised-line-item-tests.ts:133:23
    at async Promise.all (index 0)
    at deleteExisting (/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/integration_tests/tests/s3-invoice-standardised-line-item-tests.ts:136:21)
    at deletePdf (/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/integration_tests/tests/s3-invoice-standardised-line-item-tests.ts:175:3)
    at async Promise.all (index 0)
    at deleteInvoice (/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/integration_tests/tests/s3-invoice-standardised-line-item-tests.ts:151:3)
    at async Promise.all (index 0)
    at Object.&lt;anonymous&gt; (/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/integration_tests/tests/s3-invoice-standardised-line-item-tests.ts:124:5)</failure>
    </testcase>
  </testsuite>
  <testsuite name="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
" errors="0" failures="0" skipped="0" timestamp="2023-07-25T13:08:27" time="251.318" tests="4">
    <testcase classname="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty equals TransactionQty and No TransactionPrice No BillingPrice ,2,£0.00,2,£0.00,-1234567.01" name="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty equals TransactionQty and No TransactionPrice No BillingPrice ,2,£0.00,2,£0.00,-1234567.01" time="40.259">
    </testcase>
    <testcase classname="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty less than TransactionQty and No BillingPrice but has TransactionPrice ,2,£0.00,11,£27.50,-100.0" name="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty less than TransactionQty and No BillingPrice but has TransactionPrice ,2,£0.00,11,£27.50,-100.0" time="106.476">
    </testcase>
    <testcase classname="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty greater than TransactionQty and No TransactionPrice but has BillingPrice,11,£27.50,2,£0.00,-1234567.05" name="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty greater than TransactionQty and No TransactionPrice but has BillingPrice,11,£27.50,2,£0.00,-1234567.05" time="64.224">
    </testcase>
    <testcase classname="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty equals TransactionQty but BillingPrice greater than TransactionPrice,2,£6.66,2,£2.46,170.7317" name="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty equals TransactionQty but BillingPrice greater than TransactionPrice,2,£6.66,2,£2.46,170.7317" time="36.967">
    </testcase>
  </testsuite>
  <testsuite name="
Upload events to s3 directly and check the transaction curated view 
" errors="0" failures="0" skipped="0" timestamp="2023-07-25T13:09:02" time="229.258" tests="4">
    <testcase classname="
Upload events to s3 directly and check the transaction curated view 
 data retrieved from transaction_curated athena view should match the input data VENDOR_1_EVENT_1, vendor_testvendor1, 2, 2005/06/30 10:00" name="
Upload events to s3 directly and check the transaction curated view 
 data retrieved from transaction_curated athena view should match the input data VENDOR_1_EVENT_1, vendor_testvendor1, 2, 2005/06/30 10:00" time="27.055">
    </testcase>
    <testcase classname="
Upload events to s3 directly and check the transaction curated view 
 data retrieved from transaction_curated athena view should match the input data VENDOR_2_EVENT_2, vendor_testvendor2, 2, 2005/07/10 10:00" name="
Upload events to s3 directly and check the transaction curated view 
 data retrieved from transaction_curated athena view should match the input data VENDOR_2_EVENT_2, vendor_testvendor2, 2, 2005/07/10 10:00" time="44.498">
    </testcase>
    <testcase classname="
Upload events to s3 directly and check the transaction curated view 
 data retrieved from transaction_curated athena view should match the input data VENDOR_3_EVENT_4, vendor_testvendor3, 7, 2005/08/10 10:00" name="
Upload events to s3 directly and check the transaction curated view 
 data retrieved from transaction_curated athena view should match the input data VENDOR_3_EVENT_4, vendor_testvendor3, 7, 2005/08/10 10:00" time="47.049">
    </testcase>
    <testcase classname="
Upload events to s3 directly and check the transaction curated view 
 data retrieved from transaction_curated athena view should match the input data VENDOR_3_EVENT_6, vendor_testvendor3, 14, 2005/09/10 10:00" name="
Upload events to s3 directly and check the transaction curated view 
 data retrieved from transaction_curated athena view should match the input data VENDOR_3_EVENT_6, vendor_testvendor3, 14, 2005/09/10 10:00" time="79.56">
    </testcase>
  </testsuite>
  <testsuite name="
 Upload invoice standardised data to s3 directly and check the billing curated view" errors="0" failures="0" skipped="0" timestamp="2023-07-25T13:11:16" time="131.759" tests="1">
    <testcase classname="
 Upload invoice standardised data to s3 directly and check the billing curated view Uploaded invoice standardised data should match the results from billing curated view" name="
 Upload invoice standardised data to s3 directly and check the billing curated view Uploaded invoice standardised data should match the results from billing curated view" time="24.438">
    </testcase>
  </testsuite>
  <testsuite name="
 Clean Function - Happy path tests
" errors="0" failures="0" skipped="0" timestamp="2023-07-25T13:11:43" time="200.146" tests="6">
    <testcase classname="
 Clean Function - Happy path tests
 should store cleaned events in the storage bucket and check credit field value" name="
 Clean Function - Happy path tests
 should store cleaned events in the storage bucket and check credit field value" time="4.586">
    </testcase>
    <testcase classname="
 Clean Function - Happy path tests
 should store cleaned events in the storage bucket and check credit field value" name="
 Clean Function - Happy path tests
 should store cleaned events in the storage bucket and check credit field value" time="2.6">
    </testcase>
    <testcase classname="
 Clean Function - Happy path tests
 should store cleaned events in the storage bucket and check credit field value" name="
 Clean Function - Happy path tests
 should store cleaned events in the storage bucket and check credit field value" time="1.409">
    </testcase>
    <testcase classname="
 Clean Function - Unhappy path tests
 should not store event with invalid ComponentId in the storage bucket" name="
 Clean Function - Unhappy path tests
 should not store event with invalid ComponentId in the storage bucket" time="7.17">
    </testcase>
    <testcase classname="
 Clean Function - Unhappy path tests
 should not store event with invalid Timestamp in the storage bucket" name="
 Clean Function - Unhappy path tests
 should not store event with invalid Timestamp in the storage bucket" time="7.367">
    </testcase>
    <testcase classname="
 Clean Function - Unhappy path tests
 should not store event with invalid timestamp formatted in the storage bucket" name="
 Clean Function - Unhappy path tests
 should not store event with invalid timestamp formatted in the storage bucket" time="102.745">
    </testcase>
  </testsuite>
  <testsuite name="
 Happy path tests 

 Generate valid event and check cloud watch logs lambda functions Filter,Clean, Store Transactions contains eventId
" errors="0" failures="0" skipped="0" timestamp="2023-07-25T13:13:28" time="153.815" tests="3">
    <testcase classname="
 Happy path tests 

 Generate valid event and check cloud watch logs lambda functions Filter,Clean, Store Transactions contains eventId
 Filter function cloud watch logs should contain eventid" name="
 Happy path tests 

 Generate valid event and check cloud watch logs lambda functions Filter,Clean, Store Transactions contains eventId
 Filter function cloud watch logs should contain eventid" time="3.65">
    </testcase>
    <testcase classname="
 Happy path tests 

 Generate valid event and check cloud watch logs lambda functions Filter,Clean, Store Transactions contains eventId
 Clean function cloud watch logs should contain eventid" name="
 Happy path tests 

 Generate valid event and check cloud watch logs lambda functions Filter,Clean, Store Transactions contains eventId
 Clean function cloud watch logs should contain eventid" time="2.359">
    </testcase>
    <testcase classname="
 Happy path tests 

 Generate valid event and check cloud watch logs lambda functions Filter,Clean, Store Transactions contains eventId
 Store Transactions function cloud watch logs should contain eventid" name="
 Happy path tests 

 Generate valid event and check cloud watch logs lambda functions Filter,Clean, Store Transactions contains eventId
 Store Transactions function cloud watch logs should contain eventid" time="2.097">
    </testcase>
  </testsuite>
  <testsuite name="Given a csv with event data is uploaded to the transaction csv bucket" errors="0" failures="0" skipped="0" timestamp="2023-07-25T13:12:39" time="233.405" tests="1">
    <testcase classname="Given a csv with event data is uploaded to the transaction csv bucket stores the events we care about in the storage bucket" name="Given a csv with event data is uploaded to the transaction csv bucket stores the events we care about in the storage bucket" time="35.296">
    </testcase>
  </testsuite>
  <testsuite name="
 Unhappy path - Upload invalid pdf to the raw invoice bucket test
" errors="0" failures="0" skipped="0" timestamp="2023-07-25T13:12:52" time="286.46" tests="1">
    <testcase classname="
 Unhappy path - Upload invalid pdf to the raw invoice bucket test
 should move the original raw invoice to failed folder in s3 raw-invoice bucket upon uploading the invalid pdf file " name="
 Unhappy path - Upload invalid pdf to the raw invoice bucket test
 should move the original raw invoice to failed folder in s3 raw-invoice bucket upon uploading the invalid pdf file " time="84.294">
    </testcase>
  </testsuite>
  <testsuite name="Execute athena query to retrieve rate details" errors="0" failures="0" skipped="0" timestamp="2023-07-25T13:15:48" time="377.071" tests="1">
    <testcase classname="Execute athena query to retrieve rate details retrieved rate details should match rate csv uploaded in s3 config bucket" name="Execute athena query to retrieve rate details retrieved rate details should match rate csv uploaded in s3 config bucket" time="11.351">
    </testcase>
  </testsuite>
  <testsuite name="
 Invoice data buckets exists in S3
" errors="0" failures="0" skipped="0" timestamp="2023-07-25T13:22:06" time="242.36" tests="3">
    <testcase classname="
 Invoice data buckets exists in S3
 Raw invoice bucket should exists in S3" name="
 Invoice data buckets exists in S3
 Raw invoice bucket should exists in S3" time="133.721">
    </testcase>
    <testcase classname="
 Invoice data buckets exists in S3
 Raw invoice textract data bucket should exists in S3" name="
 Invoice data buckets exists in S3
 Raw invoice textract data bucket should exists in S3" time="3.399">
    </testcase>
    <testcase classname="
 Invoice data buckets exists in S3
 Storage bucket should exists in S3" name="
 Invoice data buckets exists in S3
 Storage bucket should exists in S3" time="18.66">
    </testcase>
  </testsuite>
  <testsuite name="
Generate valid event and execute athena query
" errors="0" failures="0" skipped="0" timestamp="2023-07-25T13:16:04" time="606.959" tests="2">
    <testcase classname="
Generate valid event and execute athena query
 should contain eventId in the generated query results" name="
Generate valid event and execute athena query
 should contain eventId in the generated query results" time="216.958">
    </testcase>
    <testcase classname="
Generate invalid event and execute athena query
 should not contain eventId in the generated query results" name="
Generate invalid event and execute athena query
 should not contain eventId in the generated query results" time="24.743">
    </testcase>
  </testsuite>
  <testsuite name="
 Execute athena query to retrieve vendor service details
" errors="0" failures="1" skipped="0" timestamp="2023-07-25T13:16:35" time="576.731" tests="1">
    <testcase classname="
 Execute athena query to retrieve vendor service details
 retrieved vendor service details should match with vendor service csv uploaded in s3 config bucket " name="
 Execute athena query to retrieve vendor service details
 retrieved vendor service details should match with vendor service csv uploaded in s3 config bucket " time="212.399">
      <failure>Error: Failed: &quot;Query did not succeed within the given timeout&quot;
    at Env.it (/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:113:24)
    at it (/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/node_modules/jest-jasmine2/build/jasmine/jasmineLight.js:98:21)
    at Suite.&lt;anonymous&gt; (/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/integration_tests/tests/vendor-service-athena-tests.ts:8:3)
    at addSpecsToSuite (/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/node_modules/jest-jasmine2/build/jasmine/Env.js:356:49)
    at Env.describe (/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/node_modules/jest-jasmine2/build/jasmine/Env.js:331:9)
    at describe (/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/node_modules/jest-jasmine2/build/jasmine/jasmineLight.js:89:18)
    at Object.&lt;anonymous&gt; (/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/integration_tests/tests/vendor-service-athena-tests.ts:7:1)
    at Runtime._execModule (/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/node_modules/jest-runtime/build/index.js:1452:24)
    at Runtime._loadModule (/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/node_modules/jest-runtime/build/index.js:1024:12)
    at Runtime.requireModule (/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/node_modules/jest-runtime/build/index.js:884:12)
    at jasmine2 (/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/node_modules/jest-jasmine2/build/index.js:195:13)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
    at runTestInternal (/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
  </testsuite>
  <testsuite name="
 Filter function - Happy path tests
" errors="0" failures="0" skipped="0" timestamp="2023-07-25T13:17:40" time="555.211" tests="2">
    <testcase classname="
 Filter function - Happy path tests
 should store event in the storage bucket for a valid event" name="
 Filter function - Happy path tests
 should store event in the storage bucket for a valid event" time="4.389">
    </testcase>
    <testcase classname="
 Filter Function - Unhappy path tests
 should not store events with invalid EventName in the storage bucket" name="
 Filter Function - Unhappy path tests
 should not store events with invalid EventName in the storage bucket" time="187.517">
    </testcase>
  </testsuite>
  <testsuite name="
 Execute athena query to retrieve contract details details
" errors="0" failures="0" skipped="0" timestamp="2023-07-25T13:26:10" time="270.759" tests="1">
    <testcase classname="
 Execute athena query to retrieve contract details details
 retrieved contract details should match with contract csv uploaded in s3 config bucket " name="
 Execute athena query to retrieve contract details details
 retrieved contract details should match with contract csv uploaded in s3 config bucket " time="11.853">
    </testcase>
  </testsuite>
  <testsuite name="
 Verify VAT details exists in S3 config bucket
" errors="0" failures="0" skipped="0" timestamp="2023-07-25T13:26:13" time="290.011" tests="1">
    <testcase classname="
 Verify VAT details exists in S3 config bucket
 S3 config bucket should contain VAT details matches with expected vat config file " name="
 Verify VAT details exists in S3 config bucket
 S3 config bucket should contain VAT details matches with expected vat config file " time="2.285">
    </testcase>
  </testsuite>
  <testsuite name="
 Store function test
" errors="0" failures="0" skipped="0" timestamp="2023-07-25T13:26:13" time="350.999" tests="1">
    <testcase classname="
 Store function test
 should store cleaned events in the storage bucket" name="
 Store function test
 should store cleaned events in the storage bucket" time="6.531">
    </testcase>
  </testsuite>
</testsuites>