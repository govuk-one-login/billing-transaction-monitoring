<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="60" failures="0" errors="0" time="445.022">
  <testsuite name="Email" errors="0" failures="0" skipped="0" timestamp="2023-09-21T12:05:58" time="112.918" tests="5">
    <testcase classname="Email CSV attachment" name="Email CSV attachment" time="4.684">
    </testcase>
    <testcase classname="Email PDF attachment" name="Email PDF attachment" time="2.511">
    </testcase>
    <testcase classname="Email CSV and PDF" name="Email CSV and PDF" time="2.363">
    </testcase>
    <testcase classname="Email CSV, PDF and JPEG" name="Email CSV, PDF and JPEG" time="2.61">
    </testcase>
    <testcase classname="Email Various attachments" name="Email Various attachments" time="4.21">
    </testcase>
  </testsuite>
  <testsuite name="
 Synthetic Events Generation Tests
" errors="0" failures="0" skipped="0" timestamp="2023-09-21T12:07:51" time="58.283" tests="3">
    <testcase classname="
 Synthetic Events Generation Tests
 should generate synthetic events for missing events in the full extract" name="
 Synthetic Events Generation Tests
 should generate synthetic events for missing events in the full extract" time="10.316">
    </testcase>
    <testcase classname="
 Synthetic Events Generation Tests
 should generate synthetic events when the quantity in the full extract is less than the synthetic config quantity" name="
 Synthetic Events Generation Tests
 should generate synthetic events when the quantity in the full extract is less than the synthetic config quantity" time="31.275">
    </testcase>
    <testcase classname="
 Synthetic Events Generation Tests
 should not generate synthetic events when the event exists and the quantity in the extract matches with synthetic config quantity" name="
 Synthetic Events Generation Tests
 should not generate synthetic events when the event exists and the quantity in the extract matches with synthetic config quantity" time="10.4">
    </testcase>
  </testsuite>
  <testsuite name="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
" errors="0" failures="0" skipped="0" timestamp="2023-09-21T12:05:58" time="277.691" tests="5">
    <testcase classname="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty equals TransactionQty and No TransactionPrice No BillingPrice ,2,£0.00,2,£0.00,-1234567.01" name="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty equals TransactionQty and No TransactionPrice No BillingPrice ,2,£0.00,2,£0.00,-1234567.01" time="42.151">
    </testcase>
    <testcase classname="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty less than TransactionQty and No BillingPrice but has TransactionPrice ,2,£0.00,11,£27.50,-100.0" name="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty less than TransactionQty and No BillingPrice but has TransactionPrice ,2,£0.00,11,£27.50,-100.0" time="48.659">
    </testcase>
    <testcase classname="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty greater than TransactionQty and No TransactionPrice but has BillingPrice,11,£27.50,2,£0.00,-1234567.05" name="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty greater than TransactionQty and No TransactionPrice but has BillingPrice,11,£27.50,2,£0.00,-1234567.05" time="33.971">
    </testcase>
    <testcase classname="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty equals TransactionQty but BillingPrice greater than TransactionPrice,2,£6.66,2,£2.46,170.7317" name="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty equals TransactionQty but BillingPrice greater than TransactionPrice,2,£6.66,2,£2.46,170.7317" time="34.245">
    </testcase>
    <testcase classname="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty equals TransactionQty for quarterly invoice with different month but same quarter as events,2,£0.64,2,£0.64,0.0" name="
Upload pdf invoice to raw invoice bucket and verify BillingAndTransactionsCuratedView results matches with expected data 
 results retrieved from billing and transaction_curated view query should match with expected BillingQty equals TransactionQty for quarterly invoice with different month but same quarter as events,2,£0.64,2,£0.64,0.0" time="33.349">
    </testcase>
  </testsuite>
  <testsuite name="
 Upload invoice standardised data to s3 directly and check the billing curated view" errors="0" failures="0" skipped="0" timestamp="2023-09-21T12:10:36" time="24.24" tests="1">
    <testcase classname="
 Upload invoice standardised data to s3 directly and check the billing curated view Uploaded invoice standardised data should match the results from billing curated view" name="
 Upload invoice standardised data to s3 directly and check the billing curated view Uploaded invoice standardised data should match the results from billing curated view" time="21.436">
    </testcase>
  </testsuite>
  <testsuite name="
 DashboardDataExtractFunction" errors="0" failures="0" skipped="0" timestamp="2023-09-21T12:05:58" time="328.377" tests="2">
    <testcase classname="
 DashboardDataExtractFunction should save an updated full-extract.json file, which is reflected in the btm_monthly_extract table, when standardised non-quarterly invoice data is stored in s3" name="
 DashboardDataExtractFunction should save an updated full-extract.json file, which is reflected in the btm_monthly_extract table, when standardised non-quarterly invoice data is stored in s3" time="81.336">
    </testcase>
    <testcase classname="
 DashboardDataExtractFunction should save an updated full-extract.json file, which is reflected in the btm_monthly_extract table, when standardised quarterly invoice data is stored in s3" name="
 DashboardDataExtractFunction should save an updated full-extract.json file, which is reflected in the btm_monthly_extract table, when standardised quarterly invoice data is stored in s3" time="150.653">
    </testcase>
  </testsuite>
  <testsuite name="
 Happy path - Upload valid mock invoice and verify data is seen in the billing view
" errors="0" failures="0" skipped="0" timestamp="2023-09-21T12:05:58" time="343.736" tests="4">
    <testcase classname="
 Happy path - Upload valid mock invoice and verify data is seen in the billing view
 upload valid non-quarterly pdf file in raw-invoice bucket and see that we can see the data in the view" name="
 Happy path - Upload valid mock invoice and verify data is seen in the billing view
 upload valid non-quarterly pdf file in raw-invoice bucket and see that we can see the data in the view" time="92.649">
    </testcase>
    <testcase classname="
 Happy path - Upload valid mock invoice and verify data is seen in the billing view
 upload valid quarterly pdf file in raw-invoice bucket and see that we can see the data in the view" name="
 Happy path - Upload valid mock invoice and verify data is seen in the billing view
 upload valid quarterly pdf file in raw-invoice bucket and see that we can see the data in the view" time="32.433">
    </testcase>
    <testcase classname="
 Happy path - Upload valid mock invoice and verify data is seen in the billing view
 upload valid non-quarterly csv file in raw-invoice bucket and check that we can see the data in the view" name="
 Happy path - Upload valid mock invoice and verify data is seen in the billing view
 upload valid non-quarterly csv file in raw-invoice bucket and check that we can see the data in the view" time="30.78">
    </testcase>
    <testcase classname="
 Happy path - Upload valid mock invoice and verify data is seen in the billing view
 upload valid quarterly csv file in raw-invoice bucket and check that we can see the data in the view" name="
 Happy path - Upload valid mock invoice and verify data is seen in the billing view
 upload valid quarterly csv file in raw-invoice bucket and check that we can see the data in the view" time="90.657">
    </testcase>
  </testsuite>
  <testsuite name="
Generate valid event and execute athena query
" errors="0" failures="0" skipped="0" timestamp="2023-09-21T12:08:49" time="176.567" tests="14">
    <testcase classname="
Generate valid event and execute athena query
 should contain eventId in the generated query results" name="
Generate valid event and execute athena query
 should contain eventId in the generated query results" time="13.161">
    </testcase>
    <testcase classname="
Generate valid UTC+0 event at one second after midnight on 1 Oct UTC+1 and execute athena query
 should contain eventId in the generated query results for October" name="
Generate valid UTC+0 event at one second after midnight on 1 Oct UTC+1 and execute athena query
 should contain eventId in the generated query results for October" time="11.661">
    </testcase>
    <testcase classname="
Generate valid UTC+0 event at 59 minutes and 59 seconds after midnight on 1 Oct UTC+1 and execute athena query
 should contain eventId in the generated query results for October" name="
Generate valid UTC+0 event at 59 minutes and 59 seconds after midnight on 1 Oct UTC+1 and execute athena query
 should contain eventId in the generated query results for October" time="11.649">
    </testcase>
    <testcase classname="
Generate valid UTC+0 event at one hour and one second after midnight on 1 Oct UTC+1 and execute athena query
 should contain eventId in the generated query results for October" name="
Generate valid UTC+0 event at one hour and one second after midnight on 1 Oct UTC+1 and execute athena query
 should contain eventId in the generated query results for October" time="13.596">
    </testcase>
    <testcase classname="
Generate valid UTC+0 event at one second after midnight on 1 Feb UTC+0 and execute athena query
 should contain eventId in the generated query results for February" name="
Generate valid UTC+0 event at one second after midnight on 1 Feb UTC+0 and execute athena query
 should contain eventId in the generated query results for February" time="12.583">
    </testcase>
    <testcase classname="
Generate valid UTC-6 event at one second after midnight on 1 Oct UTC+1 and execute athena query
 should contain eventId in the generated query results for October" name="
Generate valid UTC-6 event at one second after midnight on 1 Oct UTC+1 and execute athena query
 should contain eventId in the generated query results for October" time="11.593">
    </testcase>
    <testcase classname="
Generate valid UTC-6 event at 59 minutes and 59 seconds after midnight on 1 Oct UTC+1 and execute athena query
 should contain eventId in the generated query results for October" name="
Generate valid UTC-6 event at 59 minutes and 59 seconds after midnight on 1 Oct UTC+1 and execute athena query
 should contain eventId in the generated query results for October" time="11.652">
    </testcase>
    <testcase classname="
Generate valid UTC-6 event at one hour and one second after midnight on 1 Oct UTC+1 and execute athena query
 should contain eventId in the generated query results for October" name="
Generate valid UTC-6 event at one hour and one second after midnight on 1 Oct UTC+1 and execute athena query
 should contain eventId in the generated query results for October" time="11.687">
    </testcase>
    <testcase classname="
Generate valid UTC-6 event at one second after midnight on 1 Feb UTC+0 and execute athena query
 should contain eventId in the generated query results for February" name="
Generate valid UTC-6 event at one second after midnight on 1 Feb UTC+0 and execute athena query
 should contain eventId in the generated query results for February" time="11.648">
    </testcase>
    <testcase classname="
Generate valid UTC+6 event at one second after midnight on 1 Oct UTC+1 and execute athena query
 should contain eventId in the generated query results for October" name="
Generate valid UTC+6 event at one second after midnight on 1 Oct UTC+1 and execute athena query
 should contain eventId in the generated query results for October" time="11.588">
    </testcase>
    <testcase classname="
Generate valid UTC+6 event at 59 minutes and 59 seconds after midnight on 1 Oct UTC+1 and execute athena query
 should contain eventId in the generated query results for October" name="
Generate valid UTC+6 event at 59 minutes and 59 seconds after midnight on 1 Oct UTC+1 and execute athena query
 should contain eventId in the generated query results for October" time="11.731">
    </testcase>
    <testcase classname="
Generate valid UTC+6 event at one hour and one second after midnight on 1 Oct UTC+1 and execute athena query
 should contain eventId in the generated query results for October" name="
Generate valid UTC+6 event at one hour and one second after midnight on 1 Oct UTC+1 and execute athena query
 should contain eventId in the generated query results for October" time="11.615">
    </testcase>
    <testcase classname="
Generate valid UTC+6 event at one second after midnight on 1 Feb UTC+0 and execute athena query
 should contain eventId in the generated query results for February" name="
Generate valid UTC+6 event at one second after midnight on 1 Feb UTC+0 and execute athena query
 should contain eventId in the generated query results for February" time="11.974">
    </testcase>
    <testcase classname="
Generate invalid event and execute athena query
 should not contain eventId in the generated query results" name="
Generate invalid event and execute athena query
 should not contain eventId in the generated query results" time="17.437">
    </testcase>
  </testsuite>
  <testsuite name="
Upload events to s3 directly and check the transaction curated view 
" errors="0" failures="0" skipped="0" timestamp="2023-09-21T12:11:00" time="54.641" tests="4">
    <testcase classname="
Upload events to s3 directly and check the transaction curated view 
 data retrieved from transaction_curated athena view should match the input data VENDOR_1_EVENT_1, vendor_testvendor1, 2, 2005/06/30 10:00" name="
Upload events to s3 directly and check the transaction curated view 
 data retrieved from transaction_curated athena view should match the input data VENDOR_1_EVENT_1, vendor_testvendor1, 2, 2005/06/30 10:00" time="12.162">
    </testcase>
    <testcase classname="
Upload events to s3 directly and check the transaction curated view 
 data retrieved from transaction_curated athena view should match the input data VENDOR_2_EVENT_2, vendor_testvendor2, 2, 2005/07/10 10:00" name="
Upload events to s3 directly and check the transaction curated view 
 data retrieved from transaction_curated athena view should match the input data VENDOR_2_EVENT_2, vendor_testvendor2, 2, 2005/07/10 10:00" time="11.648">
    </testcase>
    <testcase classname="
Upload events to s3 directly and check the transaction curated view 
 data retrieved from transaction_curated athena view should match the input data VENDOR_3_EVENT_4, vendor_testvendor3, 7, 2005/08/10 10:00" name="
Upload events to s3 directly and check the transaction curated view 
 data retrieved from transaction_curated athena view should match the input data VENDOR_3_EVENT_4, vendor_testvendor3, 7, 2005/08/10 10:00" time="14.476">
    </testcase>
    <testcase classname="
Upload events to s3 directly and check the transaction curated view 
 data retrieved from transaction_curated athena view should match the input data VENDOR_3_EVENT_6, vendor_testvendor3, 14, 2005/09/10 10:00" name="
Upload events to s3 directly and check the transaction curated view 
 data retrieved from transaction_curated athena view should match the input data VENDOR_3_EVENT_6, vendor_testvendor3, 14, 2005/09/10 10:00" time="14.932">
    </testcase>
  </testsuite>
  <testsuite name="Given a csv with event data is uploaded to the transaction csv bucket" errors="0" failures="0" skipped="0" timestamp="2023-09-21T12:11:46" time="9.09" tests="1">
    <testcase classname="Given a csv with event data is uploaded to the transaction csv bucket stores the events we care about in the storage bucket" name="Given a csv with event data is uploaded to the transaction csv bucket stores the events we care about in the storage bucket" time="1.801">
    </testcase>
  </testsuite>
  <testsuite name="
 Unhappy path - Upload invalid pdf to the raw invoice bucket test
" errors="0" failures="0" skipped="0" timestamp="2023-09-21T12:11:55" time="9.133" tests="1">
    <testcase classname="
 Unhappy path - Upload invalid pdf to the raw invoice bucket test
 should move the original raw invoice to failed folder in s3 raw-invoice bucket upon uploading the invalid pdf file " name="
 Unhappy path - Upload invalid pdf to the raw invoice bucket test
 should move the original raw invoice to failed folder in s3 raw-invoice bucket upon uploading the invalid pdf file " time="4.133">
    </testcase>
  </testsuite>
  <testsuite name="
 Clean Function - Happy path tests
" errors="0" failures="0" skipped="0" timestamp="2023-09-21T12:11:42" time="29.071" tests="6">
    <testcase classname="
 Clean Function - Happy path tests
 should store cleaned events in the storage bucket and check credit field value" name="
 Clean Function - Happy path tests
 should store cleaned events in the storage bucket and check credit field value" time="2.276">
    </testcase>
    <testcase classname="
 Clean Function - Happy path tests
 should store cleaned events in the storage bucket and check credit field value" name="
 Clean Function - Happy path tests
 should store cleaned events in the storage bucket and check credit field value" time="1.472">
    </testcase>
    <testcase classname="
 Clean Function - Happy path tests
 should store cleaned events in the storage bucket and check credit field value" name="
 Clean Function - Happy path tests
 should store cleaned events in the storage bucket and check credit field value" time="1.406">
    </testcase>
    <testcase classname="
 Clean Function - Unhappy path tests
 should not store event with invalid ComponentId in the storage bucket" name="
 Clean Function - Unhappy path tests
 should not store event with invalid ComponentId in the storage bucket" time="7.173">
    </testcase>
    <testcase classname="
 Clean Function - Unhappy path tests
 should not store event with invalid Timestamp in the storage bucket" name="
 Clean Function - Unhappy path tests
 should not store event with invalid Timestamp in the storage bucket" time="7.14">
    </testcase>
    <testcase classname="
 Clean Function - Unhappy path tests
 should not store event with invalid timestamp formatted in the storage bucket" name="
 Clean Function - Unhappy path tests
 should not store event with invalid timestamp formatted in the storage bucket" time="7.111">
    </testcase>
  </testsuite>
  <testsuite name="
 Happy path tests 

 Generate valid event and check cloud watch logs lambda functions Filter,Clean, Store Transactions contains eventId
" errors="0" failures="0" skipped="0" timestamp="2023-09-21T12:11:55" time="22.23" tests="3">
    <testcase classname="
 Happy path tests 

 Generate valid event and check cloud watch logs lambda functions Filter,Clean, Store Transactions contains eventId
 Filter function cloud watch logs should contain eventid" name="
 Happy path tests 

 Generate valid event and check cloud watch logs lambda functions Filter,Clean, Store Transactions contains eventId
 Filter function cloud watch logs should contain eventid" time="9.195">
    </testcase>
    <testcase classname="
 Happy path tests 

 Generate valid event and check cloud watch logs lambda functions Filter,Clean, Store Transactions contains eventId
 Clean function cloud watch logs should contain eventid" name="
 Happy path tests 

 Generate valid event and check cloud watch logs lambda functions Filter,Clean, Store Transactions contains eventId
 Clean function cloud watch logs should contain eventid" time="2.298">
    </testcase>
    <testcase classname="
 Happy path tests 

 Generate valid event and check cloud watch logs lambda functions Filter,Clean, Store Transactions contains eventId
 Store Transactions function cloud watch logs should contain eventid" name="
 Happy path tests 

 Generate valid event and check cloud watch logs lambda functions Filter,Clean, Store Transactions contains eventId
 Store Transactions function cloud watch logs should contain eventid" time="2.194">
    </testcase>
  </testsuite>
  <testsuite name="
 Filter function - Happy path tests
" errors="0" failures="0" skipped="0" timestamp="2023-09-21T12:12:11" time="23.435" tests="2">
    <testcase classname="
 Filter function - Happy path tests
 should store event in the storage bucket for a valid event" name="
 Filter function - Happy path tests
 should store event in the storage bucket for a valid event" time="2.908">
    </testcase>
    <testcase classname="
 Filter Function - Unhappy path tests
 should not store events with invalid EventName in the storage bucket" name="
 Filter Function - Unhappy path tests
 should not store events with invalid EventName in the storage bucket" time="7.238">
    </testcase>
  </testsuite>
  <testsuite name="
 Invoice data buckets exists in S3
" errors="0" failures="0" skipped="0" timestamp="2023-09-21T12:12:34" time="9.108" tests="3">
    <testcase classname="
 Invoice data buckets exists in S3
 Raw invoice bucket should exists in S3" name="
 Invoice data buckets exists in S3
 Raw invoice bucket should exists in S3" time="0.733">
    </testcase>
    <testcase classname="
 Invoice data buckets exists in S3
 Raw invoice textract data bucket should exists in S3" name="
 Invoice data buckets exists in S3
 Raw invoice textract data bucket should exists in S3" time="0.919">
    </testcase>
    <testcase classname="
 Invoice data buckets exists in S3
 Storage bucket should exists in S3" name="
 Invoice data buckets exists in S3
 Storage bucket should exists in S3" time="0.544">
    </testcase>
  </testsuite>
  <testsuite name="
 Execute athena query to retrieve vendor service details
" errors="0" failures="0" skipped="0" timestamp="2023-09-21T12:12:18" time="32.959" tests="1">
    <testcase classname="
 Execute athena query to retrieve vendor service details
 retrieved vendor service details should match with vendor service csv uploaded in s3 config bucket " name="
 Execute athena query to retrieve vendor service details
 retrieved vendor service details should match with vendor service csv uploaded in s3 config bucket " time="10.501">
    </testcase>
  </testsuite>
  <testsuite name="Execute athena query to retrieve rate details" errors="0" failures="0" skipped="0" timestamp="2023-09-21T12:12:05" time="48.693" tests="1">
    <testcase classname="Execute athena query to retrieve rate details retrieved rate details should match rate csv uploaded in s3 config bucket" name="Execute athena query to retrieve rate details retrieved rate details should match rate csv uploaded in s3 config bucket" time="10.528">
    </testcase>
  </testsuite>
  <testsuite name="
 Verify VAT details exists in S3 config bucket
" errors="0" failures="0" skipped="0" timestamp="2023-09-21T12:12:53" time="5.358" tests="1">
    <testcase classname="
 Verify VAT details exists in S3 config bucket
 S3 config bucket should contain VAT details matches with expected vat config file " name="
 Verify VAT details exists in S3 config bucket
 S3 config bucket should contain VAT details matches with expected vat config file " time="0.459">
    </testcase>
  </testsuite>
  <testsuite name="
 Store function test
" errors="0" failures="0" skipped="0" timestamp="2023-09-21T12:12:51" time="8.901" tests="1">
    <testcase classname="
 Store function test
 should store cleaned events in the storage bucket" name="
 Store function test
 should store cleaned events in the storage bucket" time="1.72">
    </testcase>
  </testsuite>
  <testsuite name="New invoice with same month, vendor, service as old line item" errors="0" failures="0" skipped="0" timestamp="2023-09-21T12:11:26" time="105.785" tests="1">
    <testcase classname="New invoice with same month, vendor, service as old line item should archive old line item" name="New invoice with same month, vendor, service as old line item should archive old line item" time="103.216">
    </testcase>
  </testsuite>
  <testsuite name="
 Execute athena query to retrieve contract details details
" errors="0" failures="0" skipped="0" timestamp="2023-09-21T12:12:44" time="37.55" tests="1">
    <testcase classname="
 Execute athena query to retrieve contract details details
 retrieved contract details should match with contract csv uploaded in s3 config bucket " name="
 Execute athena query to retrieve contract details details
 retrieved contract details should match with contract csv uploaded in s3 config bucket " time="10.525">
    </testcase>
  </testsuite>
</testsuites>