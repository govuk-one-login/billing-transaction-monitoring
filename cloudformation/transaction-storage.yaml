AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  StorageQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${AWS::StackName}-storage-queue
      KmsMasterKeyId: !GetAtt KmsKey.Arn
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt StorageDeadLetterQueue.Arn
        maxReceiveCount: 3

  StorageDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${AWS::StackName}-storage-dlq
      KmsMasterKeyId: !GetAtt KmsKey.Arn

  # Does not seem to work locally: https://github.com/localstack/localstack/issues/7131
  StorageDeadLetterQueueAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${AWS::StackName}-storage-dlq-alarm
      AlarmActions:
        - !GetAtt AlarmTopicParameter.Value
      Dimensions:
        - Name: QueueName
          Value: !GetAtt StorageDeadLetterQueue.QueueName
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Statistic: Sum
      Period: 60
      Threshold: 0
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1

  StorageFunction:
    # checkov:skip=CKV_AWS_116: DLQ not needed for lambda driven by SQS
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-storage-function
      VpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue: !Sub di-btm-${Environment}-vpc-AWSServicesEndpointSecurityGroupId
        SubnetIds:
          - Fn::ImportValue: !Sub di-btm-${Environment}-vpc-PrivateSubnetIdA
          - Fn::ImportValue: !Sub di-btm-${Environment}-vpc-PrivateSubnetIdB
          - Fn::ImportValue: !Sub di-btm-${Environment}-vpc-PrivateSubnetIdC
      Events:
        StorageEvent:
          Type: SQS
          Properties:
            FunctionResponseTypes:
              - ReportBatchItemFailures
            Queue: !GetAtt StorageQueue.Arn
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          STORAGE_BUCKET: !Ref StorageBucket
          TRANSACTIONS_FOLDER: 'btm_transactions'
          EVENT_DATA_FOLDER: 'btm_event_data'
          LOCAL_ENDPOINT:
            !If [IsLocal, 'http://s3.localhost.localstack.cloud:4566', '']
          POWERTOOLS_SERVICE_NAME: !Sub ${AWS::StackName}-storage-function
      Handler: storeTransactions.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
                - sqs:ReceiveMessage
              Resource: !GetAtt StorageQueue.Arn
            - Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey*
                - kms:Encrypt
              Resource: !GetAtt KmsKey.Arn
            - Effect: Allow
              Action:
                - s3:ListBucket
                - s3:GetObject
                - s3:PutObject
              Resource:
                - !Join ['/', [!GetAtt StorageBucket.Arn, '*']]
      ReservedConcurrentExecutions: 10

  StorageFunctionAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${AWS::StackName}-storage-function-alarm
      AlarmActions:
        - !GetAtt AlarmTopicParameter.Value
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref StorageFunction
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
