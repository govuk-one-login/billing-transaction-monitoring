AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  FrontEndApi:
    Type: AWS::Serverless::Api
    Condition: FrontEndEnabled
    DependsOn:
      - FrontEndDomainName
      - FrontEndHostedZoneName
      - FrontEndFunction
    Properties:
      AccessLogSetting:
        DestinationArn: !GetAtt FrontEndApiLogGroup.Arn
        Format: '{ "requestId":"$context.requestId", "requestTime":"$context.requestTime", "routeKey":"$context.routeKey", "status":"$context.status" }'
      Auth:
        Authorizers:
          LambdaAuthorizer:
            FunctionArn: !GetAtt FrontEndAuthFunction.Arn
            FunctionPayloadType: REQUEST
            Identity:
              QueryStrings:
                - effect
        DefaultAuthorizer: LambdaAuthorizer
      CacheClusterEnabled: true
      CacheClusterSize: '0.5'
      DefinitionBody:
        openapi: 3.0.2
        info:
          title: !Sub ${AWS::StackName}-frontend-api
          description:
            A frontend for the Program Delivery Team to manage billing across Digital
            Identity
          version: '1.0'
        servers:
          - url: https://btm.account.gov.uk
        paths:
          '/':
            get:
              x-amazon-apigateway-integration:
                type: 'aws_proxy'
                httpMethod: 'POST'
                uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FrontEndFunction.Arn}/invocations'
                responses:
                  default:
                    statusCode: '200'
                    responseTemplates:
                      text/html:
                        type: string
                        example: '<h1>Welcome to DI Billing</h1>'
          '/{.+}':
            get:
              x-amazon-apigateway-integration:
                type: 'aws_proxy'
                httpMethod: 'POST'
                uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FrontEndFunction.Arn}/invocations'
                responses:
                  default:
                    statusCode: '200'
                    responseTemplates:
                      text/html:
                        type: string
                        example: '<h1>Welcome to DI Billing</h1>'
      Domain:
        CertificateArn:
          Fn::ImportValue: !If
            - IsEphemeral
            - !Sub di-btm-dev-tooling-ephemeral-frontend-certificate-arn
            - !If
              - IsDev
              - !Sub di-btm-tooling-dev-frontend-certificate-arn
              - !Sub di-btm-tooling-${Environment}-frontend-certificate-arn
        DomainName: !GetAtt FrontEndDomainName.Value
        Route53:
          HostedZoneName: !GetAtt FrontEndHostedZoneName.Value
      MethodSettings:
        - ResourcePath: /
          HttpMethod: 'GET'
          CachingEnabled: true
          CacheTtlInSeconds: 300
      StageName: web
      TracingEnabled: true

  FrontEndDomainName:
    Type: AWS::SSM::Parameter
    Condition: FrontEndEnabled
    Properties:
      Name: !Sub ${AWS::StackName}-frontend-domain-name
      Type: String
      Value: !If
        - IsProduction
        - btm.account.gov.uk
        - !If
          - IsDev
          - btm.dev.account.gov.uk
          - !If
            - IsEphemeral
            - !Join [
                '',
                [
                  !Select [1, !Split ['di-btm-', !Ref AWS::StackName]],
                  .btm.dev.account.gov.uk,
                ],
              ]
            - !Sub btm.${Environment}.account.gov.uk
      Description: !Sub Front end domain name used by app stack ${AWS::StackName}. Do not edit, managed by CloudFormation.

  FrontEndHostedZoneName:
    Type: AWS::SSM::Parameter
    Condition: FrontEndEnabled
    Properties:
      Name: !Sub ${AWS::StackName}-frontend-hosted-zone-name
      Type: String
      Value: !If
        - IsProduction
        - btm.account.gov.uk.
        - !If
          - IsDev
          - btm.dev.account.gov.uk.
          - !Sub btm.${Environment}.account.gov.uk.
      Description: !Sub Front end Route 53 Hosted Zone name used by app stack ${AWS::StackName}. Do not edit, managed by CloudFormation.

  FrontEndApiLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: FrontEndEnabled
    Properties:
      KmsKeyId: !GetAtt KmsKey.Arn
      RetentionInDays: 90
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-api-access-logs

  GoogleClientDetails:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: 'The client id and client key for Sign In with Google'
      Name: !Sub ${AWS::StackName}-google-client-details
      KmsKeyId: !Ref KmsKey
      SecretString: '{"clientId": "<CLIENT_ID>", "clientSecret": "<CLIENT_SECRET>"}'

  FrontEndAuthFunction:
    # checkov:skip=CKV_AWS_116: DLQ not needed for front end lambda
    # checkov:skip=CKV_AWS_117: VPC not needed for lambda
    Type: AWS::Serverless::Function
    DependsOn:
      - GoogleClientDetails
    Condition: FrontEndEnabled
    Properties:
      FunctionName: !Sub ${AWS::StackName}-frontend-auth-function
      Handler: frontendAuth.handler
      ReservedConcurrentExecutions: 10
      KmsKeyArn: !GetAtt KmsKey.Arn
      Environment:
        Variables:
          AWS_ACCOUNT_ID: !Sub ${AWS::AccountId}
          GOOGLE_CLIENT_ID: '{{resolve:secretsmanager:GoogleClientDetails:SecretString:clientId}}'
          GOOGLE_CLIENT_SECRET: '{{resolve:secretsmanager:GoogleClientDetails:SecretString:clientSecret}}'
          ENV_NAME: !Sub ${Environment}

  FrontEndFunction:
    # checkov:skip=CKV_AWS_116: DLQ not needed for front end lambda
    # checkov:skip=CKV_AWS_117: VPC not needed for lambda
    Type: AWS::Serverless::Function
    Condition: FrontEndEnabled
    Properties:
      Environment:
        Variables:
          STORAGE_BUCKET: !Ref StorageBucket
          CONFIG_BUCKET: !GetAtt ConfigStackParameter.Value
          POWERTOOLS_SERVICE_NAME: !Sub ${AWS::StackName}-frontend-function
      FunctionName: !Sub ${AWS::StackName}-frontend-function
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref FrontEndApi
            Path: /
            Method: 'GET'
        ProxyApiAllElse:
          Type: Api
          Properties:
            RestApiId: !Ref FrontEndApi
            Path: /*
            Method: 'GET'
      Handler: frontend.handler
      KmsKeyArn: !GetAtt KmsKey.Arn
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey*
                - kms:Encrypt
              Resource: !GetAtt KmsKey.Arn
            - Effect: Allow
              Action: s3:GetObject
              Resource: !Sub arn:aws:s3:::${ConfigStackParameter.Value}/*
            - Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey*
                - kms:Encrypt
              Resource: '*'
              Condition:
                ForAnyValue:StringEquals:
                  kms:ResourceAliases: !Sub alias/key-${ConfigStackParameter.Value}-general
            - Effect: Allow
              Action: glue:GetTable
              Resource: !Sub arn:aws:glue:${AWS::Region}:${AWS::AccountId}:*
            - Effect: Allow
              Action:
                - s3:AbortMultipartUpload
                - s3:GetBucketLocation
                - s3:GetObject
                - s3:ListBucket
                - s3:ListBucketMultipartUploads
                - s3:ListMultipartUploadParts
                - s3:PutObject
              Resource:
                - !GetAtt StorageBucket.Arn
                - !Sub ${StorageBucket.Arn}/*
                - !GetAtt AthenaQueryResultsBucket.Arn
                - !Sub ${AthenaQueryResultsBucket.Arn}/*
            - Effect: Allow
              Action:
                - athena:StartQueryExecution
                - athena:GetQueryExecution
                - athena:GetQueryResults
              Resource: !Sub arn:aws:athena:${AWS::Region}:${AWS::AccountId}:workgroup/primary
      ReservedConcurrentExecutions: 10
