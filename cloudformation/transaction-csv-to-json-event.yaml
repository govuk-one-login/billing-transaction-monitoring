AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  TransactionCsvBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-transaction-csv
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !GetAtt KmsKey.Arn
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName: !Ref GlobalLogBucket
        LogFilePrefix: transaction-csv-bucket/log
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: '.csv'
            Function: !GetAtt TransactionCsvToJsonEventFunction.Arn
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 1825  # Five years
            Status: Enabled

  TransactionCsvToJsonEventFunction:
    # checkov:skip=CKV_AWS_116: DLQ not needed for lambda driven by SQS
    # checkov:skip=CKV_AWS_117: VPC not needed for lambda
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-transaction-csv-to-json-event-function
      Events:
        S3Event:
          Type: S3
          Properties:
            Bucket: !Ref TransactionCsvBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: '.csv'
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          OUTPUT_QUEUE_URL: !Ref CleanQueue
          LOCAL_ENDPOINT: !If [IsLocal, 'http://localhost:4566', '']
          CONFIG_BUCKET: !GetAtt ConfigStackParameter.Value
      Handler: transactionCsvToJsonEvent.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Effect: Allow
              Action: s3:GetObject
              Resource:
                - !Sub arn:aws:s3:::${AWS::StackName}-transaction-csv/*
                - !Sub arn:aws:s3:::${ConfigStackParameter.Value}/csv_transactions/*
            - Effect: Allow
              Action:
                - sqs:SendMessage
              Resource: !GetAtt CleanQueue.Arn
            - Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey*
                - kms:Encrypt
              Resource: !GetAtt KmsKey.Arn
            - Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey*
                - kms:Encrypt
              Resource: '*'
              Condition:
                ForAnyValue:StringEquals:
                  kms:ResourceAliases: !Sub alias/key-${ConfigStackParameter.Value}-general
      ReservedConcurrentExecutions: 1
      MemorySize: 256


  TransactionCsvToJsonEventFunctionAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${AWS::StackName}-transaction-csv-to-json-event-function-alarm
      AlarmActions:
        - !GetAtt AlarmTopicParameter.Value
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref TransactionCsvToJsonEventFunction
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
