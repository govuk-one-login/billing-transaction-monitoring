AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  TransactionCsvBucket:
    Type: AWS::S3::Bucket
    DependsOn:
      - LambdaPermissionForS3TransactionCsvToJsonEventFunction
    Properties:
      BucketName: !Sub ${AWS::StackName}-transaction-csv
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !GetAtt KmsKey.Arn
            BucketKeyEnabled: true
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName: !Ref GlobalLogBucket
        LogFilePrefix: transaction-csv-bucket/log
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: '.csv'
            Function: !GetAtt TransactionCsvToJsonEventFunction.Arn
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 1825 # Five years
            Status: Enabled

  TransactionCsvToJsonEventFunction:
    # checkov:skip=CKV_AWS_116: DLQ not needed for lambda driven by SQS
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-transaction-csv-to-json-event-function
      VpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue: !Sub di-btm-${Environment}-vpc-AWSServicesEndpointSecurityGroupId
        SubnetIds:
          - Fn::ImportValue: !Sub di-btm-${Environment}-vpc-PrivateSubnetIdA
          - Fn::ImportValue: !Sub di-btm-${Environment}-vpc-PrivateSubnetIdB
          - Fn::ImportValue: !Sub di-btm-${Environment}-vpc-PrivateSubnetIdC
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          OUTPUT_QUEUE_URL: !Ref CleanQueue
          LOCAL_ENDPOINT:
            !If [IsLocal, 'http://localhost:4566', !Ref AWS::NoValue]
          CONFIG_BUCKET: !GetAtt ConfigStackParameter.Value
          POWERTOOLS_SERVICE_NAME: !Sub ${AWS::StackName}-transaction-csv-to-json-event-function
      Handler: transactionCsvToJsonEvent.handler
      Policies:
        - AWSLambdaVPCAccessExecutionRole
        - Statement:
            - Effect: Allow
              Action: s3:GetObject
              Resource:
                - !Sub arn:aws:s3:::${AWS::StackName}-transaction-csv/*
                - !Sub arn:aws:s3:::${ConfigStackParameter.Value}/csv_transactions/*
            - Effect: Allow
              Action:
                - sqs:SendMessage
              Resource: !GetAtt CleanQueue.Arn
            - Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey*
                - kms:Encrypt
              Resource: !GetAtt KmsKey.Arn
            - Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey*
                - kms:Encrypt
              Resource: '*'
              Condition:
                ForAnyValue:StringEquals:
                  kms:ResourceAliases: !Sub alias/key-${ConfigStackParameter.Value}-general
      ReservedConcurrentExecutions: 1
      MemorySize: 4096
      Timeout: 900

  LambdaPermissionForS3TransactionCsvToJsonEventFunction:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref TransactionCsvToJsonEventFunction
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub arn:aws:s3:::${AWS::StackName}-transaction-csv

  TransactionCsvToJsonEventFunctionAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${AWS::StackName}-transaction-csv-to-json-event-function-alarm
      AlarmActions:
        - !GetAtt AlarmTopicParameter.Value
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref TransactionCsvToJsonEventFunction
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
