AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  EmailProcessingQueue: # This SQS is required as per BTM-558
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${AWS::StackName}-email-processing-queue
      KmsMasterKeyId: !GetAtt KmsKey.Arn
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt EmailProcessingDeadLetterQueue.Arn
        maxReceiveCount: 3

  EmailProcessingQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: SQS:SendMessage
            Condition:
              ArnLike:
                aws:SourceArn: !Sub arn:aws:s3:*:*:${AWS::StackName}-email # no reference as this needs to be created before the bucket
              StringEquals:
                aws:SourceAccount: !Ref AWS::AccountId
            Effect: Allow
            Principal:
              Service: s3.amazonaws.com
            Resource: !GetAtt EmailProcessingQueue.Arn
      Queues:
        - !Ref EmailProcessingQueue

  EmailProcessingDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${AWS::StackName}-email-processing-dlq
      KmsMasterKeyId: !GetAtt KmsKey.Arn
      MessageRetentionPeriod: 1209600

  EmailProcessingDeadLetterQueueAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${AWS::StackName}-email-processing-dlq-alarm
      AlarmActions:
        - !GetAtt AlarmTopicParameter.Value
      Dimensions:
        - Name: QueueName
          Value: !GetAtt EmailProcessingDeadLetterQueue.QueueName
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Statistic: Sum
      Period: 60
      Threshold: 0
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1

  EmailProcessingFunction:
    # checkov:skip=CKV_AWS_116: dead letter queue not needed for lambda
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-email-processing-function
      VpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue: !Sub di-btm-${Environment}-vpc-AWSServicesEndpointSecurityGroupId
        SubnetIds:
          - Fn::ImportValue: !Sub di-btm-${Environment}-vpc-PrivateSubnetIdA
          - Fn::ImportValue: !Sub di-btm-${Environment}-vpc-PrivateSubnetIdB
          - Fn::ImportValue: !Sub di-btm-${Environment}-vpc-PrivateSubnetIdC
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          DESTINATION_BUCKET: !Ref RawInvoiceBucket
          LOCAL_ENDPOINT: !If [IsLocal, 'http://s3.localhost.localstack.cloud:4566', !Ref AWS::NoValue]
          POWERTOOLS_SERVICE_NAME: !Sub ${AWS::StackName}-email-processing-function
      Events:
        EmailProcessingEvent:
          Type: SQS
          Properties:
            FunctionResponseTypes:
              - ReportBatchItemFailures
            Queue: !GetAtt EmailProcessingQueue.Arn
      Handler: processEmail.handler
      Policies:
        - AWSLambdaVPCAccessExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
                - sqs:ReceiveMessage
              Resource: !GetAtt EmailProcessingQueue.Arn
            - Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey*
                - kms:Encrypt
              Resource:
                - !GetAtt KmsKey.Arn
                - !GetAtt MultiRegionKmsKey.Arn
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:ListBucket
              Resource:
                - !GetAtt EmailBucket.Arn
                - !Sub ${EmailBucket.Arn}/*
            - Effect: Allow
              Action:
                - s3:PutObject
              Resource: !Join ['/', [!GetAtt RawInvoiceBucket.Arn, '*']]
      ReservedConcurrentExecutions: 1

  EmailProcessingFunctionAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${AWS::StackName}-email-processing-function-alarm
      AlarmActions:
        - !GetAtt AlarmTopicParameter.Value
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref EmailProcessingFunction
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
