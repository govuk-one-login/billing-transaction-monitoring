AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  CleanQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${AWS::StackName}-clean-queue
      KmsMasterKeyId: !GetAtt KmsKey.Arn
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt CleanDeadLetterQueue.Arn
        maxReceiveCount: 1

  CleanDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${AWS::StackName}-clean-dlq
      KmsMasterKeyId: !GetAtt KmsKey.Arn

  # Does not seem to work locally: https://github.com/localstack/localstack/issues/7131
  CleanDeadLetterQueueAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${AWS::StackName}-clean-dlq-alarm
      AlarmActions:
        - !Ref AlarmTopic
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      Metrics:
        - Id: messages
          MetricStat:
            Metric:
              Dimensions:
                - Name: QueueName
                  Value: !GetAtt CleanDeadLetterQueue.QueueName
              MetricName: ApproximateNumberOfMessagesVisible
              Namespace: AWS/SQS
            Period: 1800
            Stat: Sum
          ReturnData: false
        - Id: messagesRate
          Expression: RATE(messages)
          ReturnData: true
      Threshold: 0

  CleanFunction:
    # checkov:skip=CKV_AWS_116: DLQ not needed for lambda driven by SQS
    # checkov:skip=CKV_AWS_117: VPC not needed for lambda
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-clean-function
      Environment:
        Variables:
          OUTPUT_QUEUE_URL: !Ref StorageQueue
          LOCAL_ENDPOINT: !If [IsLocal, 'http://localhost:4566', '']
      Events:
        CleanEvent:
          Type: SQS
          Properties:
            FunctionResponseTypes:
              - ReportBatchItemFailures
            Queue: !GetAtt CleanQueue.Arn
      Handler: clean.handler
      KmsKeyArn: !GetAtt KmsKey.Arn
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
                - sqs:ReceiveMessage
              Resource: !GetAtt CleanQueue.Arn
            - Effect: Allow
              Action:
                - sqs:SendMessage
              Resource: !GetAtt StorageQueue.Arn
            - Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey*
                - kms:Encrypt
              Resource: !GetAtt KmsKey.Arn
      ReservedConcurrentExecutions: 10

  CleanFunctionAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${AWS::StackName}-clean-function-alarm
      AlarmActions:
        - !Ref AlarmTopic
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref CleanFunction
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 1800
      Statistic: Sum
      Threshold: 0
