AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  FilterQueue:
    Type: AWS::SQS::Queue
    Condition: IsLowerEnv
    Properties:
      QueueName: !Sub ${AWS::StackName}-filter-queue
      KmsMasterKeyId: !GetAtt KmsKey.Arn
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt FilterDeadLetterQueue.Arn
        maxReceiveCount: 1

  FilterDeadLetterQueue:
    Type: AWS::SQS::Queue
    Condition: IsLowerEnv
    Properties:
      QueueName: !Sub ${AWS::StackName}-filter-dlq
      KmsMasterKeyId: !GetAtt KmsKey.Arn

  # Does not seem to work locally: https://github.com/localstack/localstack/issues/7131
  FilterDeadLetterQueueAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsLowerEnv
    Properties:
      AlarmName: !Sub ${AWS::StackName}-filter-dlq-alarm
      AlarmActions:
        - !Ref AlarmTopic
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      Metrics:
        - Id: messages
          MetricStat:
            Metric:
              Dimensions:
                - Name: QueueName
                  Value: !GetAtt FilterDeadLetterQueue.QueueName
              MetricName: ApproximateNumberOfMessagesVisible
              Namespace: AWS/SQS
            Period: 1800
            Stat: Sum
          ReturnData: false
        - Id: messagesRate
          Expression: RATE(messages)
          ReturnData: true
      Threshold: 0

  FilterFunction:
    # checkov:skip=CKV_AWS_116: DLQ not needed for lambda driven by SQS
    # checkov:skip=CKV_AWS_117: VPC not needed for lambda
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-filter-function
      Events:
        FilterEvent:
          Type: SQS
          Properties:
            FunctionResponseTypes:
              - ReportBatchItemFailures
            Queue:
              !If [
                IsHigherEnv,
                !Sub '{{resolve:ssm:${ConfigStackParameter.Value}-transaction-input-queue-arn}}',
                !GetAtt FilterQueue.Arn,
              ]
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          OUTPUT_QUEUE_URL: !Ref CleanQueue
          LOCAL_ENDPOINT: !If [IsLocal, 'http://localhost:4566', '']
      Handler: filter.handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
                - sqs:ReceiveMessage
              Resource:
                !If [
                  IsHigherEnv,
                  !Sub '{{resolve:ssm:${ConfigStackParameter.Value}-transaction-input-queue-arn}}',
                  !GetAtt FilterQueue.Arn,
                ]
            - Effect: Allow
              Action:
                - sqs:SendMessage
              Resource: !GetAtt CleanQueue.Arn
            - Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey*
                - kms:Encrypt
              Resource:
                - !GetAtt KmsKey.Arn
                - !If [
                    IsHigherEnv,
                    !Sub '{{resolve:ssm:${ConfigStackParameter.Value}-transaction-input-kms-key-arn}}',
                    !Ref AWS::NoValue,
                  ]
      ReservedConcurrentExecutions: 10

  FilterFunctionAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${AWS::StackName}-filter-function-alarm
      AlarmActions:
        - !Ref AlarmTopic
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref FilterFunction
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 1800
      Statistic: Sum
      Threshold: 0
