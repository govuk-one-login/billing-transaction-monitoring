{"info":{"type":"runner","start":"2023-09-28T08:44:43.672Z","end":"2023-09-28T08:44:44.418Z","_duration":746,"cid":"0-4","capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"117.0.5938.92","chrome":{"chromedriverVersion":"116.0.5845.96 (1a391816688002153ef791ffe60d9e899a71a037-refs/branch-heads/5845@{#1382})","userDataDir":"/tmp/.org.chromium.Chromium.XpxbDa"},"fedcm:accounts":true,"goog:chromeOptions":{"debuggerAddress":"localhost:38335"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"linux","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:extension:minPinLength":true,"webauthn:extension:prf":true,"webauthn:virtualAuthenticators":true,"sessionId":"dcb355cef013f1d42685973b0774ff18"},"sanitizedCapabilities":"chrome.117_0_5938_92.linux","config":{"protocol":"http","hostname":"localhost","port":9515,"path":"/","capabilities":{"browserName":"chrome","goog:chromeOptions":{"args":["--headless","--disable-dev-shm-usage","--disable-gpu","--no-sandbox"]}},"logLevel":"error","connectionRetryTimeout":120000,"connectionRetryCount":3,"logLevels":{},"enableDirectConnect":true,"strictSSL":true,"requestedCapabilities":{"browserName":"chrome","goog:chromeOptions":{"args":["--headless","--disable-dev-shm-usage","--disable-gpu","--no-sandbox"]}},"specs":["./ui-tests/specs/**/*.spec.ts"],"exclude":[],"suites":{},"rootDir":"/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring","baseUrl":"https://pr-490.btm.dev.account.gov.uk","bail":0,"waitforInterval":500,"waitforTimeout":10000,"framework":"mocha","reporters":["spec",["junit",{"outputDir":"./ui-tests/reports/junitReports"}],[null,{"outputDir":"./ui-tests/reports/uiHtmlReports"}]],"services":["chromedriver"],"execArgv":[],"maxInstances":10,"maxInstancesPerCapability":100,"injectGlobals":true,"specFileRetries":0,"specFileRetriesDelay":0,"specFileRetriesDeferred":false,"filesToWatch":[],"onPrepare":[null],"onWorkerStart":[],"onWorkerEnd":[],"before":[],"beforeSession":[],"beforeSuite":[],"beforeHook":[],"beforeTest":[],"beforeCommand":[],"afterCommand":[],"afterTest":[],"afterHook":[],"afterSuite":[],"afterSession":[],"after":[],"onComplete":[null],"onReload":[],"automationProtocol":"webdriver"},"specs":["file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts"],"sessionId":"dcb355cef013f1d42685973b0774ff18","isMultiremote":false,"instanceOptions":{"dcb355cef013f1d42685973b0774ff18":{"protocol":"http","hostname":"localhost","port":9515,"path":"/","capabilities":{"browserName":"chrome","goog:chromeOptions":{"args":["--headless","--disable-dev-shm-usage","--disable-gpu","--no-sandbox"]}},"logLevel":"error","connectionRetryTimeout":120000,"connectionRetryCount":3,"logLevels":{},"enableDirectConnect":true,"strictSSL":true,"requestedCapabilities":{"browserName":"chrome","goog:chromeOptions":{"args":["--headless","--disable-dev-shm-usage","--disable-gpu","--no-sandbox"]}},"specs":["./ui-tests/specs/**/*.spec.ts"],"exclude":[],"suites":{},"rootDir":"/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring","baseUrl":"https://pr-490.btm.dev.account.gov.uk","bail":0,"waitforInterval":500,"waitforTimeout":10000,"framework":"mocha","reporters":["spec",["junit",{"outputDir":"./ui-tests/reports/junitReports"}],[null,{"outputDir":"./ui-tests/reports/uiHtmlReports"}]],"services":["chromedriver"],"execArgv":[],"maxInstances":10,"maxInstancesPerCapability":100,"injectGlobals":true,"specFileRetries":0,"specFileRetriesDelay":0,"specFileRetriesDeferred":false,"filesToWatch":[],"onPrepare":[null],"onWorkerStart":[],"onWorkerEnd":[],"before":[],"beforeSession":[],"beforeSuite":[],"beforeHook":[],"beforeTest":[],"beforeCommand":[],"afterCommand":[],"afterTest":[],"afterHook":[],"afterSuite":[],"afterSession":[],"after":[],"onComplete":[null],"onReload":[],"automationProtocol":"webdriver"}},"retry":0,"failures":19,"retries":0},"metrics":{"passed":0,"skipped":0,"failed":19,"duration":746,"start":"2023-09-28T08:44:43.673Z","end":"2023-09-28T08:44:44Z"},"title":"Test Report Title","suites":[{"type":"suite:start","start":"2023-09-28T08:44:43.686Z","end":"2023-09-28T08:44:44.340Z","_duration":645,"uid":"suite-0-0","cid":"0-4","file":"/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts","title":"Invoice Page Test","fullTitle":"Invoice Page Test","tests":[],"hooks":[],"suites":[{"type":"suite:start","start":"2023-09-28T08:44:43.686Z","end":"2023-09-28T08:44:44.288Z","_duration":602,"uid":"suite-1-0","cid":"0-4","file":"/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts","title":"Vendor: Vendor Three,Invoice:2005-09","fullTitle":"Invoice Page Test.Vendor: Vendor Three,Invoice:2005-09","tests":[{"type":"test","start":"2023-09-28T08:44:43.718Z","_duration":0,"uid":"test-10-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor Three,Invoice:2005-09.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor Three,Invoice:2005-09","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0}],"hooks":[{"type":"hook","start":"2023-09-28T08:44:43.720Z","end":"2023-09-28T08:44:44.287Z","_duration":567,"uid":"hook-10-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor Three,Invoice:2005-09","parent":"Vendor: Vendor Three,Invoice:2005-09","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor3","stack":"Error: Contract not found for vendor: vendor_testvendor3\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor3","stack":"Error: Contract not found for vendor: vendor_testvendor3\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}],"suites":[],"parent":"Invoice Page Test","hooksAndTests":[{"type":"test","start":"2023-09-28T08:44:43.718Z","_duration":0,"uid":"test-10-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor Three,Invoice:2005-09.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor Three,Invoice:2005-09","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0},{"type":"hook","start":"2023-09-28T08:44:43.720Z","end":"2023-09-28T08:44:44.287Z","_duration":567,"uid":"hook-10-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor Three,Invoice:2005-09","parent":"Vendor: Vendor Three,Invoice:2005-09","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor3","stack":"Error: Contract not found for vendor: vendor_testvendor3\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor3","stack":"Error: Contract not found for vendor: vendor_testvendor3\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}]},{"type":"suite:start","start":"2023-09-28T08:44:44.288Z","end":"2023-09-28T08:44:44.290Z","_duration":2,"uid":"suite-1-1","cid":"0-4","file":"/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts","title":"Vendor: Vendor Three,Invoice:2023-03","fullTitle":"Invoice Page Test.Vendor: Vendor Three,Invoice:2023-03","tests":[{"type":"test","start":"2023-09-28T08:44:44.288Z","_duration":0,"uid":"test-11-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor Three,Invoice:2023-03.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor Three,Invoice:2023-03","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0}],"hooks":[{"type":"hook","start":"2023-09-28T08:44:44.288Z","end":"2023-09-28T08:44:44.290Z","_duration":2,"uid":"hook-11-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor Three,Invoice:2023-03","parent":"Vendor: Vendor Three,Invoice:2023-03","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor3","stack":"Error: Contract not found for vendor: vendor_testvendor3\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor3","stack":"Error: Contract not found for vendor: vendor_testvendor3\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}],"suites":[],"parent":"Invoice Page Test","hooksAndTests":[{"type":"test","start":"2023-09-28T08:44:44.288Z","_duration":0,"uid":"test-11-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor Three,Invoice:2023-03.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor Three,Invoice:2023-03","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0},{"type":"hook","start":"2023-09-28T08:44:44.288Z","end":"2023-09-28T08:44:44.290Z","_duration":2,"uid":"hook-11-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor Three,Invoice:2023-03","parent":"Vendor: Vendor Three,Invoice:2023-03","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor3","stack":"Error: Contract not found for vendor: vendor_testvendor3\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor3","stack":"Error: Contract not found for vendor: vendor_testvendor3\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}]},{"type":"suite:start","start":"2023-09-28T08:44:44.290Z","end":"2023-09-28T08:44:44.292Z","_duration":2,"uid":"suite-1-2","cid":"0-4","file":"/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts","title":"Vendor: Vendor Three,Invoice:2005-08","fullTitle":"Invoice Page Test.Vendor: Vendor Three,Invoice:2005-08","tests":[{"type":"test","start":"2023-09-28T08:44:44.290Z","_duration":0,"uid":"test-12-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor Three,Invoice:2005-08.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor Three,Invoice:2005-08","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0}],"hooks":[{"type":"hook","start":"2023-09-28T08:44:44.291Z","end":"2023-09-28T08:44:44.292Z","_duration":1,"uid":"hook-12-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor Three,Invoice:2005-08","parent":"Vendor: Vendor Three,Invoice:2005-08","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor3","stack":"Error: Contract not found for vendor: vendor_testvendor3\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor3","stack":"Error: Contract not found for vendor: vendor_testvendor3\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}],"suites":[],"parent":"Invoice Page Test","hooksAndTests":[{"type":"test","start":"2023-09-28T08:44:44.290Z","_duration":0,"uid":"test-12-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor Three,Invoice:2005-08.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor Three,Invoice:2005-08","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0},{"type":"hook","start":"2023-09-28T08:44:44.291Z","end":"2023-09-28T08:44:44.292Z","_duration":1,"uid":"hook-12-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor Three,Invoice:2005-08","parent":"Vendor: Vendor Three,Invoice:2005-08","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor3","stack":"Error: Contract not found for vendor: vendor_testvendor3\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor3","stack":"Error: Contract not found for vendor: vendor_testvendor3\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}]},{"type":"suite:start","start":"2023-09-28T08:44:44.293Z","end":"2023-09-28T08:44:44.294Z","_duration":1,"uid":"suite-1-3","cid":"0-4","file":"/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts","title":"Vendor: Vendor Five,Invoice:2005-12","fullTitle":"Invoice Page Test.Vendor: Vendor Five,Invoice:2005-12","tests":[{"type":"test","start":"2023-09-28T08:44:44.293Z","_duration":0,"uid":"test-13-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor Five,Invoice:2005-12.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor Five,Invoice:2005-12","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0}],"hooks":[{"type":"hook","start":"2023-09-28T08:44:44.293Z","end":"2023-09-28T08:44:44.294Z","_duration":1,"uid":"hook-13-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor Five,Invoice:2005-12","parent":"Vendor: Vendor Five,Invoice:2005-12","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor5","stack":"Error: Contract not found for vendor: vendor_testvendor5\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor5","stack":"Error: Contract not found for vendor: vendor_testvendor5\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}],"suites":[],"parent":"Invoice Page Test","hooksAndTests":[{"type":"test","start":"2023-09-28T08:44:44.293Z","_duration":0,"uid":"test-13-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor Five,Invoice:2005-12.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor Five,Invoice:2005-12","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0},{"type":"hook","start":"2023-09-28T08:44:44.293Z","end":"2023-09-28T08:44:44.294Z","_duration":1,"uid":"hook-13-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor Five,Invoice:2005-12","parent":"Vendor: Vendor Five,Invoice:2005-12","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor5","stack":"Error: Contract not found for vendor: vendor_testvendor5\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor5","stack":"Error: Contract not found for vendor: vendor_testvendor5\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}]},{"type":"suite:start","start":"2023-09-28T08:44:44.295Z","end":"2023-09-28T08:44:44.297Z","_duration":2,"uid":"suite-1-4","cid":"0-4","file":"/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts","title":"Vendor: Vendor Five,Invoice:2005-05","fullTitle":"Invoice Page Test.Vendor: Vendor Five,Invoice:2005-05","tests":[{"type":"test","start":"2023-09-28T08:44:44.295Z","_duration":0,"uid":"test-14-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor Five,Invoice:2005-05.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor Five,Invoice:2005-05","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0}],"hooks":[{"type":"hook","start":"2023-09-28T08:44:44.295Z","end":"2023-09-28T08:44:44.297Z","_duration":2,"uid":"hook-14-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor Five,Invoice:2005-05","parent":"Vendor: Vendor Five,Invoice:2005-05","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor5","stack":"Error: Contract not found for vendor: vendor_testvendor5\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor5","stack":"Error: Contract not found for vendor: vendor_testvendor5\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}],"suites":[],"parent":"Invoice Page Test","hooksAndTests":[{"type":"test","start":"2023-09-28T08:44:44.295Z","_duration":0,"uid":"test-14-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor Five,Invoice:2005-05.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor Five,Invoice:2005-05","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0},{"type":"hook","start":"2023-09-28T08:44:44.295Z","end":"2023-09-28T08:44:44.297Z","_duration":2,"uid":"hook-14-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor Five,Invoice:2005-05","parent":"Vendor: Vendor Five,Invoice:2005-05","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor5","stack":"Error: Contract not found for vendor: vendor_testvendor5\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor5","stack":"Error: Contract not found for vendor: vendor_testvendor5\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}]},{"type":"suite:start","start":"2023-09-28T08:44:44.297Z","end":"2023-09-28T08:44:44.299Z","_duration":2,"uid":"suite-1-5","cid":"0-4","file":"/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts","title":"Vendor: Vendor Five,Invoice:2005-11","fullTitle":"Invoice Page Test.Vendor: Vendor Five,Invoice:2005-11","tests":[{"type":"test","start":"2023-09-28T08:44:44.297Z","_duration":0,"uid":"test-15-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor Five,Invoice:2005-11.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor Five,Invoice:2005-11","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0}],"hooks":[{"type":"hook","start":"2023-09-28T08:44:44.298Z","end":"2023-09-28T08:44:44.299Z","_duration":1,"uid":"hook-15-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor Five,Invoice:2005-11","parent":"Vendor: Vendor Five,Invoice:2005-11","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor5","stack":"Error: Contract not found for vendor: vendor_testvendor5\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor5","stack":"Error: Contract not found for vendor: vendor_testvendor5\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}],"suites":[],"parent":"Invoice Page Test","hooksAndTests":[{"type":"test","start":"2023-09-28T08:44:44.297Z","_duration":0,"uid":"test-15-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor Five,Invoice:2005-11.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor Five,Invoice:2005-11","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0},{"type":"hook","start":"2023-09-28T08:44:44.298Z","end":"2023-09-28T08:44:44.299Z","_duration":1,"uid":"hook-15-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor Five,Invoice:2005-11","parent":"Vendor: Vendor Five,Invoice:2005-11","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor5","stack":"Error: Contract not found for vendor: vendor_testvendor5\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor5","stack":"Error: Contract not found for vendor: vendor_testvendor5\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}]},{"type":"suite:start","start":"2023-09-28T08:44:44.299Z","end":"2023-09-28T08:44:44.300Z","_duration":1,"uid":"suite-1-6","cid":"0-4","file":"/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts","title":"Vendor: Vendor Four,Invoice:2005-04","fullTitle":"Invoice Page Test.Vendor: Vendor Four,Invoice:2005-04","tests":[{"type":"test","start":"2023-09-28T08:44:44.299Z","_duration":0,"uid":"test-16-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor Four,Invoice:2005-04.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor Four,Invoice:2005-04","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0}],"hooks":[{"type":"hook","start":"2023-09-28T08:44:44.299Z","end":"2023-09-28T08:44:44.300Z","_duration":1,"uid":"hook-16-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor Four,Invoice:2005-04","parent":"Vendor: Vendor Four,Invoice:2005-04","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor4","stack":"Error: Contract not found for vendor: vendor_testvendor4\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor4","stack":"Error: Contract not found for vendor: vendor_testvendor4\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}],"suites":[],"parent":"Invoice Page Test","hooksAndTests":[{"type":"test","start":"2023-09-28T08:44:44.299Z","_duration":0,"uid":"test-16-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor Four,Invoice:2005-04.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor Four,Invoice:2005-04","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0},{"type":"hook","start":"2023-09-28T08:44:44.299Z","end":"2023-09-28T08:44:44.300Z","_duration":1,"uid":"hook-16-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor Four,Invoice:2005-04","parent":"Vendor: Vendor Four,Invoice:2005-04","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor4","stack":"Error: Contract not found for vendor: vendor_testvendor4\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor4","stack":"Error: Contract not found for vendor: vendor_testvendor4\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}]},{"type":"suite:start","start":"2023-09-28T08:44:44.300Z","end":"2023-09-28T08:44:44.302Z","_duration":2,"uid":"suite-1-7","cid":"0-4","file":"/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts","title":"Vendor: Vendor Four,Invoice:2005-03","fullTitle":"Invoice Page Test.Vendor: Vendor Four,Invoice:2005-03","tests":[{"type":"test","start":"2023-09-28T08:44:44.300Z","_duration":0,"uid":"test-17-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor Four,Invoice:2005-03.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor Four,Invoice:2005-03","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0}],"hooks":[{"type":"hook","start":"2023-09-28T08:44:44.301Z","end":"2023-09-28T08:44:44.302Z","_duration":1,"uid":"hook-17-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor Four,Invoice:2005-03","parent":"Vendor: Vendor Four,Invoice:2005-03","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor4","stack":"Error: Contract not found for vendor: vendor_testvendor4\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor4","stack":"Error: Contract not found for vendor: vendor_testvendor4\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}],"suites":[],"parent":"Invoice Page Test","hooksAndTests":[{"type":"test","start":"2023-09-28T08:44:44.300Z","_duration":0,"uid":"test-17-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor Four,Invoice:2005-03.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor Four,Invoice:2005-03","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0},{"type":"hook","start":"2023-09-28T08:44:44.301Z","end":"2023-09-28T08:44:44.302Z","_duration":1,"uid":"hook-17-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor Four,Invoice:2005-03","parent":"Vendor: Vendor Four,Invoice:2005-03","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor4","stack":"Error: Contract not found for vendor: vendor_testvendor4\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor4","stack":"Error: Contract not found for vendor: vendor_testvendor4\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}]},{"type":"suite:start","start":"2023-09-28T08:44:44.302Z","end":"2023-09-28T08:44:44.304Z","_duration":2,"uid":"suite-1-8","cid":"0-4","file":"/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts","title":"Vendor: Vendor Four,Invoice:2005-02","fullTitle":"Invoice Page Test.Vendor: Vendor Four,Invoice:2005-02","tests":[{"type":"test","start":"2023-09-28T08:44:44.302Z","_duration":0,"uid":"test-18-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor Four,Invoice:2005-02.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor Four,Invoice:2005-02","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0}],"hooks":[{"type":"hook","start":"2023-09-28T08:44:44.302Z","end":"2023-09-28T08:44:44.304Z","_duration":2,"uid":"hook-18-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor Four,Invoice:2005-02","parent":"Vendor: Vendor Four,Invoice:2005-02","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor4","stack":"Error: Contract not found for vendor: vendor_testvendor4\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor4","stack":"Error: Contract not found for vendor: vendor_testvendor4\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}],"suites":[],"parent":"Invoice Page Test","hooksAndTests":[{"type":"test","start":"2023-09-28T08:44:44.302Z","_duration":0,"uid":"test-18-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor Four,Invoice:2005-02.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor Four,Invoice:2005-02","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0},{"type":"hook","start":"2023-09-28T08:44:44.302Z","end":"2023-09-28T08:44:44.304Z","_duration":2,"uid":"hook-18-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor Four,Invoice:2005-02","parent":"Vendor: Vendor Four,Invoice:2005-02","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor4","stack":"Error: Contract not found for vendor: vendor_testvendor4\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor4","stack":"Error: Contract not found for vendor: vendor_testvendor4\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}]},{"type":"suite:start","start":"2023-09-28T08:44:44.304Z","end":"2023-09-28T08:44:44.315Z","_duration":11,"uid":"suite-1-9","cid":"0-4","file":"/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts","title":"Vendor: Vendor Two,Invoice:2005-07","fullTitle":"Invoice Page Test.Vendor: Vendor Two,Invoice:2005-07","tests":[{"type":"test","start":"2023-09-28T08:44:44.304Z","_duration":0,"uid":"test-19-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor Two,Invoice:2005-07.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor Two,Invoice:2005-07","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0}],"hooks":[{"type":"hook","start":"2023-09-28T08:44:44.304Z","end":"2023-09-28T08:44:44.315Z","_duration":11,"uid":"hook-19-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor Two,Invoice:2005-07","parent":"Vendor: Vendor Two,Invoice:2005-07","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor2","stack":"Error: Contract not found for vendor: vendor_testvendor2\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor2","stack":"Error: Contract not found for vendor: vendor_testvendor2\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}],"suites":[],"parent":"Invoice Page Test","hooksAndTests":[{"type":"test","start":"2023-09-28T08:44:44.304Z","_duration":0,"uid":"test-19-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor Two,Invoice:2005-07.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor Two,Invoice:2005-07","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0},{"type":"hook","start":"2023-09-28T08:44:44.304Z","end":"2023-09-28T08:44:44.315Z","_duration":11,"uid":"hook-19-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor Two,Invoice:2005-07","parent":"Vendor: Vendor Two,Invoice:2005-07","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor2","stack":"Error: Contract not found for vendor: vendor_testvendor2\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor2","stack":"Error: Contract not found for vendor: vendor_testvendor2\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}]},{"type":"suite:start","start":"2023-09-28T08:44:44.315Z","end":"2023-09-28T08:44:44.317Z","_duration":1,"uid":"suite-1-10","cid":"0-4","file":"/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts","title":"Vendor: Vendor One,Invoice:2023-01","fullTitle":"Invoice Page Test.Vendor: Vendor One,Invoice:2023-01","tests":[{"type":"test","start":"2023-09-28T08:44:44.315Z","_duration":0,"uid":"test-110-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor One,Invoice:2023-01.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor One,Invoice:2023-01","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0}],"hooks":[{"type":"hook","start":"2023-09-28T08:44:44.315Z","end":"2023-09-28T08:44:44.316Z","_duration":1,"uid":"hook-110-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor One,Invoice:2023-01","parent":"Vendor: Vendor One,Invoice:2023-01","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}],"suites":[],"parent":"Invoice Page Test","hooksAndTests":[{"type":"test","start":"2023-09-28T08:44:44.315Z","_duration":0,"uid":"test-110-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor One,Invoice:2023-01.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor One,Invoice:2023-01","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0},{"type":"hook","start":"2023-09-28T08:44:44.315Z","end":"2023-09-28T08:44:44.316Z","_duration":1,"uid":"hook-110-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor One,Invoice:2023-01","parent":"Vendor: Vendor One,Invoice:2023-01","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}]},{"type":"suite:start","start":"2023-09-28T08:44:44.317Z","end":"2023-09-28T08:44:44.321Z","_duration":4,"uid":"suite-1-11","cid":"0-4","file":"/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts","title":"Vendor: Vendor One,Invoice:2023-02","fullTitle":"Invoice Page Test.Vendor: Vendor One,Invoice:2023-02","tests":[{"type":"test","start":"2023-09-28T08:44:44.317Z","_duration":0,"uid":"test-111-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor One,Invoice:2023-02.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor One,Invoice:2023-02","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0}],"hooks":[{"type":"hook","start":"2023-09-28T08:44:44.317Z","end":"2023-09-28T08:44:44.318Z","_duration":1,"uid":"hook-111-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor One,Invoice:2023-02","parent":"Vendor: Vendor One,Invoice:2023-02","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}],"suites":[],"parent":"Invoice Page Test","hooksAndTests":[{"type":"test","start":"2023-09-28T08:44:44.317Z","_duration":0,"uid":"test-111-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor One,Invoice:2023-02.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor One,Invoice:2023-02","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0},{"type":"hook","start":"2023-09-28T08:44:44.317Z","end":"2023-09-28T08:44:44.318Z","_duration":1,"uid":"hook-111-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor One,Invoice:2023-02","parent":"Vendor: Vendor One,Invoice:2023-02","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}]},{"type":"suite:start","start":"2023-09-28T08:44:44.321Z","end":"2023-09-28T08:44:44.323Z","_duration":2,"uid":"suite-1-12","cid":"0-4","file":"/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts","title":"Vendor: Vendor One,Invoice:2023-03","fullTitle":"Invoice Page Test.Vendor: Vendor One,Invoice:2023-03","tests":[{"type":"test","start":"2023-09-28T08:44:44.321Z","_duration":0,"uid":"test-112-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor One,Invoice:2023-03.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor One,Invoice:2023-03","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0}],"hooks":[{"type":"hook","start":"2023-09-28T08:44:44.321Z","end":"2023-09-28T08:44:44.322Z","_duration":1,"uid":"hook-112-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor One,Invoice:2023-03","parent":"Vendor: Vendor One,Invoice:2023-03","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}],"suites":[],"parent":"Invoice Page Test","hooksAndTests":[{"type":"test","start":"2023-09-28T08:44:44.321Z","_duration":0,"uid":"test-112-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor One,Invoice:2023-03.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor One,Invoice:2023-03","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0},{"type":"hook","start":"2023-09-28T08:44:44.321Z","end":"2023-09-28T08:44:44.322Z","_duration":1,"uid":"hook-112-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor One,Invoice:2023-03","parent":"Vendor: Vendor One,Invoice:2023-03","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}]},{"type":"suite:start","start":"2023-09-28T08:44:44.323Z","end":"2023-09-28T08:44:44.324Z","_duration":1,"uid":"suite-1-13","cid":"0-4","file":"/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts","title":"Vendor: Vendor One,Invoice:2023-04","fullTitle":"Invoice Page Test.Vendor: Vendor One,Invoice:2023-04","tests":[{"type":"test","start":"2023-09-28T08:44:44.323Z","_duration":0,"uid":"test-113-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor One,Invoice:2023-04.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor One,Invoice:2023-04","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0}],"hooks":[{"type":"hook","start":"2023-09-28T08:44:44.323Z","end":"2023-09-28T08:44:44.324Z","_duration":1,"uid":"hook-113-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor One,Invoice:2023-04","parent":"Vendor: Vendor One,Invoice:2023-04","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}],"suites":[],"parent":"Invoice Page Test","hooksAndTests":[{"type":"test","start":"2023-09-28T08:44:44.323Z","_duration":0,"uid":"test-113-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor One,Invoice:2023-04.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor One,Invoice:2023-04","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0},{"type":"hook","start":"2023-09-28T08:44:44.323Z","end":"2023-09-28T08:44:44.324Z","_duration":1,"uid":"hook-113-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor One,Invoice:2023-04","parent":"Vendor: Vendor One,Invoice:2023-04","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}]},{"type":"suite:start","start":"2023-09-28T08:44:44.324Z","end":"2023-09-28T08:44:44.326Z","_duration":2,"uid":"suite-1-14","cid":"0-4","file":"/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts","title":"Vendor: Vendor One,Invoice:2023-05","fullTitle":"Invoice Page Test.Vendor: Vendor One,Invoice:2023-05","tests":[{"type":"test","start":"2023-09-28T08:44:44.324Z","_duration":0,"uid":"test-114-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor One,Invoice:2023-05.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor One,Invoice:2023-05","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0}],"hooks":[{"type":"hook","start":"2023-09-28T08:44:44.324Z","end":"2023-09-28T08:44:44.325Z","_duration":1,"uid":"hook-114-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor One,Invoice:2023-05","parent":"Vendor: Vendor One,Invoice:2023-05","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}],"suites":[],"parent":"Invoice Page Test","hooksAndTests":[{"type":"test","start":"2023-09-28T08:44:44.324Z","_duration":0,"uid":"test-114-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor One,Invoice:2023-05.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor One,Invoice:2023-05","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0},{"type":"hook","start":"2023-09-28T08:44:44.324Z","end":"2023-09-28T08:44:44.325Z","_duration":1,"uid":"hook-114-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor One,Invoice:2023-05","parent":"Vendor: Vendor One,Invoice:2023-05","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}]},{"type":"suite:start","start":"2023-09-28T08:44:44.326Z","end":"2023-09-28T08:44:44.327Z","_duration":1,"uid":"suite-1-15","cid":"0-4","file":"/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts","title":"Vendor: Vendor One,Invoice:2023-06","fullTitle":"Invoice Page Test.Vendor: Vendor One,Invoice:2023-06","tests":[{"type":"test","start":"2023-09-28T08:44:44.326Z","_duration":0,"uid":"test-115-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor One,Invoice:2023-06.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor One,Invoice:2023-06","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0}],"hooks":[{"type":"hook","start":"2023-09-28T08:44:44.326Z","end":"2023-09-28T08:44:44.327Z","_duration":1,"uid":"hook-115-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor One,Invoice:2023-06","parent":"Vendor: Vendor One,Invoice:2023-06","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}],"suites":[],"parent":"Invoice Page Test","hooksAndTests":[{"type":"test","start":"2023-09-28T08:44:44.326Z","_duration":0,"uid":"test-115-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor One,Invoice:2023-06.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor One,Invoice:2023-06","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0},{"type":"hook","start":"2023-09-28T08:44:44.326Z","end":"2023-09-28T08:44:44.327Z","_duration":1,"uid":"hook-115-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor One,Invoice:2023-06","parent":"Vendor: Vendor One,Invoice:2023-06","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}]},{"type":"suite:start","start":"2023-09-28T08:44:44.327Z","end":"2023-09-28T08:44:44.328Z","_duration":1,"uid":"suite-1-16","cid":"0-4","file":"/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts","title":"Vendor: Vendor One,Invoice:2023-07","fullTitle":"Invoice Page Test.Vendor: Vendor One,Invoice:2023-07","tests":[{"type":"test","start":"2023-09-28T08:44:44.327Z","_duration":0,"uid":"test-116-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor One,Invoice:2023-07.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor One,Invoice:2023-07","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0}],"hooks":[{"type":"hook","start":"2023-09-28T08:44:44.327Z","end":"2023-09-28T08:44:44.328Z","_duration":1,"uid":"hook-116-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor One,Invoice:2023-07","parent":"Vendor: Vendor One,Invoice:2023-07","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}],"suites":[],"parent":"Invoice Page Test","hooksAndTests":[{"type":"test","start":"2023-09-28T08:44:44.327Z","_duration":0,"uid":"test-116-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor One,Invoice:2023-07.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor One,Invoice:2023-07","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0},{"type":"hook","start":"2023-09-28T08:44:44.327Z","end":"2023-09-28T08:44:44.328Z","_duration":1,"uid":"hook-116-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor One,Invoice:2023-07","parent":"Vendor: Vendor One,Invoice:2023-07","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}]},{"type":"suite:start","start":"2023-09-28T08:44:44.328Z","end":"2023-09-28T08:44:44.329Z","_duration":1,"uid":"suite-1-17","cid":"0-4","file":"/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts","title":"Vendor: Vendor One,Invoice:2004-12","fullTitle":"Invoice Page Test.Vendor: Vendor One,Invoice:2004-12","tests":[{"type":"test","start":"2023-09-28T08:44:44.328Z","_duration":0,"uid":"test-117-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor One,Invoice:2004-12.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor One,Invoice:2004-12","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0}],"hooks":[{"type":"hook","start":"2023-09-28T08:44:44.328Z","end":"2023-09-28T08:44:44.329Z","_duration":1,"uid":"hook-117-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor One,Invoice:2004-12","parent":"Vendor: Vendor One,Invoice:2004-12","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}],"suites":[],"parent":"Invoice Page Test","hooksAndTests":[{"type":"test","start":"2023-09-28T08:44:44.328Z","_duration":0,"uid":"test-117-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor One,Invoice:2004-12.should display correct status banner color and message","output":[],"retries":0,"parent":"Vendor: Vendor One,Invoice:2004-12","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0},{"type":"hook","start":"2023-09-28T08:44:44.328Z","end":"2023-09-28T08:44:44.329Z","_duration":1,"uid":"hook-117-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor One,Invoice:2004-12","parent":"Vendor: Vendor One,Invoice:2004-12","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor1","stack":"Error: Contract not found for vendor: vendor_testvendor1\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}]},{"type":"suite:start","start":"2023-09-28T08:44:44.329Z","end":"2023-09-28T08:44:44.331Z","_duration":2,"uid":"suite-1-18","cid":"0-4","file":"/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts","title":"Vendor: Vendor Six,Invoice:2005-Q2","fullTitle":"Invoice Page Test.Vendor: Vendor Six,Invoice:2005-Q2","tests":[{"type":"test","start":"2023-09-28T08:44:44.329Z","_duration":0,"uid":"test-118-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor Six,Invoice:2005-Q2.should display correct status banner color and message","output":[{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"sessionId":"dcb355cef013f1d42685973b0774ff18","cid":"0-4","type":"command"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"result":{"value":null},"sessionId":"dcb355cef013f1d42685973b0774ff18","cid":"0-4","type":"result"}],"retries":0,"parent":"Vendor: Vendor Six,Invoice:2005-Q2","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0}],"hooks":[{"type":"hook","start":"2023-09-28T08:44:44.329Z","end":"2023-09-28T08:44:44.331Z","_duration":2,"uid":"hook-118-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor Six,Invoice:2005-Q2","parent":"Vendor: Vendor Six,Invoice:2005-Q2","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor6","stack":"Error: Contract not found for vendor: vendor_testvendor6\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor6","stack":"Error: Contract not found for vendor: vendor_testvendor6\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}],"suites":[],"parent":"Invoice Page Test","hooksAndTests":[{"type":"test","start":"2023-09-28T08:44:44.329Z","_duration":0,"uid":"test-118-0","cid":"0-4","title":"should display correct status banner color and message","fullTitle":"Invoice Page Test.Vendor: Vendor Six,Invoice:2005-Q2.should display correct status banner color and message","output":[{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"sessionId":"dcb355cef013f1d42685973b0774ff18","cid":"0-4","type":"command"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"result":{"value":null},"sessionId":"dcb355cef013f1d42685973b0774ff18","cid":"0-4","type":"result"}],"retries":0,"parent":"Vendor: Vendor Six,Invoice:2005-Q2","state":"pending","body":"async () => {\n                const priceDifferencePercentage = getPriceDifferencePercentageFromJson(vendor, year, month);\n                expectEqual(await InvoicePage.getStatusBannerTitle(), generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerMessage);\n                const expectedBannerColor = generateExpectedBannerDetailsFromPercentagePriceDifference(priceDifferencePercentage).bannerColor;\n                expectEqual(await InvoicePage.getStatusBannerColor(), expectedBannerColor);\n            }","events":[],"errorIndex":0},{"type":"hook","start":"2023-09-28T08:44:44.329Z","end":"2023-09-28T08:44:44.331Z","_duration":2,"uid":"hook-118-0","cid":"0-4","title":"\"before each\" hook for Vendor: Vendor Six,Invoice:2005-Q2","parent":"Vendor: Vendor Six,Invoice:2005-Q2","body":"async () => {\n                filteredInvoiceItems = await setupPageAndGetData(vendorId, year, month, invoiceIsQuarterly);\n                const pageTitle = await InvoicePage.getPageHeadingText();\n                const monthOrQuarterString = invoiceIsQuarterly\n                    ? quarterName(month)\n                    : prettyMonthName(month);\n                expect(pageTitle).toContain(`${vendor} (${monthOrQuarterString} ${year})`);\n            }","errors":[{"name":"Error","message":"Contract not found for vendor: vendor_testvendor6","stack":"Error: Contract not found for vendor: vendor_testvendor6\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"}],"error":{"name":"Error","message":"Contract not found for vendor: vendor_testvendor6","stack":"Error: Contract not found for vendor: vendor_testvendor6\n    at getVendorContractIdFromConfig (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/utils/getVendorContractId.ts:13:11)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async setupPageAndGetData (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:34:22)\n    at async Context.<anonymous> (file:///home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/specs/invoice.spec.ts:60:32)","type":"Error"},"state":"failed","currentTest":"should display correct status banner color and message"}]}],"parent":"","hooksAndTests":[]}],"reportFile":"/home/runner/work/di-billing-transaction-monitoring/di-billing-transaction-monitoring/ui-tests/reports/uiHtmlReports/report-0-4.html","browserName":"not specified"}